{"version":3,"sources":["reportWebVitals.js","shared/Button/PrintButton.jsx","features/form/components/Inputs.jsx","features/form/components/FormFieldset.jsx","features/form/components/FormLayout.jsx","features/form/screens/Form.jsx","features/navbar/components/ColorThemeButton.jsx","features/navbar/screens/Header.jsx","root/App.jsx","index.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PrintButton","className","onClick","window","print","icon","faPrint","Input","animation","id","isRequired","label","name","onChange","placeholder","type","value","inputProps","pattern","Error","htmlFor","autoComplete","required","NewInfoButton","faPlus","Inputs","inputs","enableAnimation","map","element","index","row","key","uniqid","FormFieldset","props","state","info","addNewInfo","bind","event","preventDefault","this","newInfo","setState","legend","title","description","isPersonalFieldset","length","Component","FormLayout","children","Form","formSection","fieldsetData","ColorThemeButton","themeState","clickHandler","aria-label","faSun","faMoon","root","document","documentElement","detectColorTheme","theme","storedTheme","localStorage","getItem","mediaQuery","matchMedia","setAttribute","matches","Header","isLightTheme","changeTheme","setItem","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c2e69f3d.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { faPrint } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport './PrintButton.css';\n\nconst PrintButton = () => {\n    const printPage = () => window.print();\n\n    return (\n        <button className=\"button button--md print\" onClick={printPage}>\n            <FontAwesomeIcon icon={faPrint} />\n            Print page\n        </button>\n    );\n};\n\nexport default PrintButton;\n","import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport '../../../shared/Button/PrintButton.css';\nimport './Inputs.css';\n\n// isRequired, onChange, type\nconst Input = ({ animation, id, isRequired, label, name, onChange, placeholder, type, value }) => {\n    const inputProps = {};\n\n    switch (type) {\n        case 'text':\n            // Allows all language characters.\n            inputProps.pattern = '^\\\\p{L}*$';\n            inputProps.type = 'text';\n            break;\n        case 'email':\n            inputProps.type = 'email';\n            break;\n        case 'phone':\n            inputProps.type = 'phone';\n            break;\n        default:\n            throw new Error('Unknown input type passed to <Input />.');\n    }\n\n    return (\n        <div className={`input ${animation}`}>\n            <label htmlFor={id}>{label}</label>\n            <input\n                autoComplete=\"on\"\n                id={id}\n                name={name} // Used for setting values in state\n                placeholder={placeholder}\n                required={isRequired}\n                value={value} // Value in text\n                {...inputProps}\n                onChange={onChange}\n            />\n        </div>\n    );\n};\n\nconst NewInfoButton = ({ onClick }) => {\n    return (\n        <button className=\"button button--md new-info\" onClick={onClick}>\n            <FontAwesomeIcon icon={faPlus} />\n            Add more information\n        </button>\n    );\n};\n\nexport { Input, NewInfoButton };\n","import React, { Component } from 'react';\nimport uniqid from 'uniqid';\nimport { Input, NewInfoButton } from '../components/Inputs';\nimport './FormFieldset.css';\n\nconst Inputs = ({ inputs, enableAnimation }) => {\n    return (\n        <div className=\"new-inputs\">\n            {inputs.map((element, index) => {\n                // Show animation only when adding new inputs.\n                const animation = enableAnimation ? `text-anim-${index + 1}` : ``;\n\n                if (element.row) {\n                    return (\n                        <div className={`row ${animation}`} key={uniqid()}>\n                            {element.row.map((element) => {\n                                return <Input {...element} key={uniqid()} />;\n                            })}\n                        </div>\n                    );\n                }\n\n                return <Input animation={animation} {...element} key={uniqid()} />;\n            })}\n        </div>\n    );\n};\n\nclass FormFieldset extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            info: [],\n        };\n\n        this.addNewInfo = this.addNewInfo.bind(this);\n    }\n\n    addNewInfo(event) {\n        event.preventDefault();\n\n        const inputs = <Inputs inputs={this.props.inputs} enableAnimation={true} />;\n        const newInfo = [...this.state.info, inputs];\n        this.setState({\n            info: newInfo,\n        });\n    }\n\n    render() {\n        const { title, description } = this.props.legend;\n        // Don't show <NewInfoButton /> on 'Personal Information' fieldset since they're is no\n        // reason to add more personal info.\n        const isPersonalFieldset = title === 'Personal Information';\n\n        const inputs = <Inputs inputs={this.props.inputs} enableAnimation={false} />;\n        const { info } = this.state;\n\n        return (\n            <fieldset>\n                <legend className=\"legend\">\n                    <h2>{title}</h2>\n                    <p>{description}</p>\n                </legend>\n                <div className=\"input-container\">\n                    {inputs}\n                    {info.length !== 0 && info.map((element) => element)}\n                    {!isPersonalFieldset && <NewInfoButton onClick={this.addNewInfo} />}\n                </div>\n            </fieldset>\n        );\n    }\n}\n\nexport default FormFieldset;\n","import React from 'react';\nimport './FormLayout.css';\n\nconst FormLayout = ({ children }) => {\n    return (\n        <section className=\"form-container\">\n            <form className=\"form form--round\">{children}</form>\n        </section>\n    );\n};\n\nexport default FormLayout;\n","import React, { Component } from 'react';\nimport uniqid from 'uniqid';\nimport PrintButton from '../../../shared/Button/PrintButton';\nimport FormFieldset from '../components/FormFieldset';\nimport FormLayout from '../components/FormLayout';\nimport './Form.css';\n\nclass Form extends Component {\n    constructor() {\n        super();\n\n        this.formSection = [\n            {\n                legend: {\n                    title: 'Personal Information',\n                    description:\n                        'Share your contact information so companies know how to reach you.',\n                },\n                inputs: [\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'First Name',\n                                id: 'first-name',\n                                isRequired: true,\n                                name: 'firstName',\n                                placeholder: 'e.g. Biggy',\n                            },\n                            {\n                                type: 'text',\n                                label: 'Last Name',\n                                id: 'last-name',\n                                isRequired: true,\n                                name: 'lastName',\n                                placeholder: 'e.g. Enterprise',\n                            },\n                        ],\n                    },\n                    {\n                        row: [\n                            {\n                                type: 'email',\n                                label: 'Email address',\n                                id: 'email',\n                                isRequired: true,\n                                name: 'email',\n                                placeholder: 'e.g. enterprise6@email.com',\n                            },\n                            {\n                                type: 'phone',\n                                label: 'Phone Number',\n                                id: 'phone-number',\n                                isRequired: true,\n                                name: 'phoneNumber',\n                                placeholder: 'e.g. (123) 456-7890',\n                            },\n                        ],\n                    },\n                    {\n                        type: 'text',\n                        label: 'Residence',\n                        id: 'residence',\n                        isRequired: true,\n                        name: 'residence',\n                        placeholder: 'e.g. Newport News, US',\n                    },\n                ],\n            },\n            {\n                legend: {\n                    title: 'Education History',\n                    description:\n                        'Having a degree shows an ability to learn. Although not required, you may include it if you wish to share.',\n                },\n                inputs: [\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'School Name',\n                                id: 'school-name',\n                                isRequired: false,\n                                name: 'schoolName',\n                                placeholder: 'e.g. Harvard University',\n                            },\n                            {\n                                type: 'text',\n                                label: 'Field of Study',\n                                id: 'field-of-study',\n                                isRequired: false,\n                                name: 'fieldOfStudy',\n                                placeholder: 'e.g. Computer Science, B.S.',\n                            },\n                        ],\n                    },\n                    {\n                        type: 'text',\n                        label: 'Date',\n                        id: 'date',\n                        isRequired: false,\n                        name: 'date',\n                        placeholder: 'e.g. 05/12/1938-02/17/1947',\n                    },\n                ],\n            },\n            {\n                legend: {\n                    title: 'Work Experience',\n                    description:\n                        'Employers love practical experience. List all relevant work stuff.',\n                },\n                inputs: [\n                    {\n                        type: 'text',\n                        label: 'Date',\n                        id: 'date',\n                        isRequired: false,\n                        name: 'date',\n                        placeholder: 'e.g. 05/12/1938-02/17/1947',\n                    },\n                ],\n            },\n        ];\n\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <FormLayout>\n                {this.formSection.map((fieldsetData) => {\n                    return <FormFieldset {...fieldsetData} key={uniqid()} />;\n                })}\n                <PrintButton />\n            </FormLayout>\n        );\n    }\n}\n\nexport default Form;\n","import { faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nconst ColorThemeButton = ({ themeState, clickHandler }) => {\n    return (\n        <button\n            aria-label={themeState ? 'Activate dark theme' : 'Activate light theme'}\n            onClick={clickHandler}\n        >\n            <FontAwesomeIcon icon={themeState ? faSun : faMoon} />\n        </button>\n    );\n};\n\nexport default ColorThemeButton;\n","import React, { Component } from 'react';\nimport ColorThemeButton from '../components/ColorThemeButton';\n\nconst root = document.documentElement;\n\nconst detectColorTheme = (() => {\n    // Initial color theme.\n    let theme = 'light';\n    const storedTheme = localStorage.getItem('theme');\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n    if (storedTheme) {\n        root.setAttribute('data-theme', 'light');\n        if (storedTheme === 'dark') {\n            theme = 'dark';\n        }\n    } else if (mediaQuery.matches) {\n        theme = 'dark';\n    }\n\n    if (theme === 'dark') {\n        root.setAttribute('data-theme', 'dark');\n        return false;\n    }\n\n    root.setAttribute('data-theme', 'light');\n    return true;\n})();\n\nclass Header extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            isLightTheme: detectColorTheme,\n        };\n\n        this.changeTheme = this.changeTheme.bind(this);\n    }\n\n    changeTheme() {\n        this.setState(\n            {\n                isLightTheme: !this.state.isLightTheme,\n            },\n            () => {\n                const theme = this.state.isLightTheme ? 'light' : 'dark';\n                root.setAttribute('data-theme', theme);\n                localStorage.setItem('theme', theme);\n            }\n        );\n    }\n\n    render() {\n        const { isLightTheme } = this.state;\n\n        return (\n            <header>\n                <ColorThemeButton themeState={isLightTheme} clickHandler={this.changeTheme} />\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","import Form from '../features/form/screens/Form';\nimport Header from '../features/navbar/screens/Header';\n\nfunction App() {\n    return (\n        <>\n            <Header />\n            <main>\n                <Form />\n            </main>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './root/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}