{"version":3,"sources":["reportWebVitals.js","shared/Button/PrintButton.jsx","features/form/components/FormFieldset.jsx","features/form/components/FormLayout.jsx","features/form/components/Inputs.jsx","features/form/screens/Form.jsx","features/navbar/components/ColorThemeButton.jsx","features/navbar/screens/Header.jsx","root/App.jsx","index.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PrintButton","className","onClick","window","print","icon","faPrint","FormFieldset","title","description","children","FormLayout","convertToProperCase","string","toUpperCase","slice","TextInput","id","name","placeholder","value","class","for","autoComplete","pattern","required","type","Form","state","Component","ColorThemeButton","themeState","clickHandler","aria-label","faSun","faMoon","root","document","documentElement","detectColorTheme","theme","storedTheme","localStorage","getItem","mediaQuery","matchMedia","setAttribute","matches","Header","isLightTheme","changeTheme","bind","this","setState","setItem","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.63dd01b3.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { faPrint } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport './PrintButton.css';\n\nconst PrintButton = () => {\n    const printPage = () => window.print();\n\n    return (\n        <button className=\"button button--md print\" onClick={printPage}>\n            <FontAwesomeIcon icon={faPrint} />\n            Print page\n        </button>\n    );\n};\n\nexport default PrintButton;\n","import React from 'react';\nimport './FormFieldset.css';\n\nconst FormFieldset = ({ title, description, children }) => {\n    return (\n        <fieldset className=\"fieldset\">\n            <legend className=\"legend\">\n                <h2>{title}</h2>\n                <p>{description}</p>\n            </legend>\n            <div className=\"input-container\">{children}</div>\n        </fieldset>\n    );\n};\n\nexport default FormFieldset;\n","import React from 'react';\nimport './FormLayout.css';\n\nconst FormLayout = ({ children }) => {\n    return (\n        <section className=\"form-container\">\n            <form className=\"form form--round\">{children}</form>\n        </section>\n    );\n};\n\nexport default FormLayout;\n","import React from 'react';\nimport './Inputs.css';\n\n// Convert first letter in string to uppercase\nconst convertToProperCase = (string) => string[0].toUpperCase() + string.slice(1);\n\nconst TextInput = ({ id, name, placeholder, title, value }) => {\n    return (\n        <div class=\"input\">\n            <label for={id}>{convertToProperCase(id)}</label>\n            <input\n                autoComplete=\"on\"\n                className=\"\"\n                id={id}\n                name={name} // Used for setting values in state\n                pattern=\"[\\p{L}\\p{M}-]+\" // https://www.regular-expressions.info/unicode.html (unicode categories)\n                placeholder={placeholder}\n                required\n                title={title} // Tooltip on hover\n                type=\"text\"\n                value={value} // Value in text\n            />\n        </div>\n    );\n};\n\nconst EmailInput = ({ id, name, placeholder, title, value }) => {\n    return (\n        <div class=\"input\">\n            <label for={id}>{convertToProperCase(id)}</label>\n            <input\n                autoComplete=\"on\"\n                className=\"\"\n                id={id}\n                name={name}\n                placeholder={placeholder}\n                required\n                title={title}\n                type=\"email\"\n                value={value}\n            />\n        </div>\n    );\n};\n\nexport { TextInput, EmailInput };\n","import React, { Component } from 'react';\nimport PrintButton from '../../../shared/Button/PrintButton';\nimport FormFieldset from '../components/FormFieldset';\nimport FormLayout from '../components/FormLayout';\nimport { TextInput } from '../components/Inputs';\n\nclass Form extends Component {\n    constructor() {\n        super();\n\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <FormLayout>\n                <FormFieldset\n                    title=\"Personal Information\"\n                    description=\"Share your contact information so that companies know how to reach you.\"\n                >\n                    <TextInput\n                        id=\"email\"\n                        name=\"email-input\"\n                        placeholder=\"e.g. yorktown5@gmail.com\"\n                        title=\"Enter email info\"\n                        value=\"\"\n                    />\n                </FormFieldset>\n                <PrintButton />\n            </FormLayout>\n        );\n    }\n}\n\nexport default Form;\n","import { faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nconst ColorThemeButton = ({ themeState, clickHandler }) => {\n    return (\n        <button\n            aria-label={themeState ? 'Activate dark theme' : 'Activate light theme'}\n            onClick={clickHandler}\n        >\n            <FontAwesomeIcon icon={themeState ? faSun : faMoon} />\n        </button>\n    );\n};\n\nexport default ColorThemeButton;\n","import React, { Component } from 'react';\nimport ColorThemeButton from '../components/ColorThemeButton';\n\nconst root = document.documentElement;\n\nconst detectColorTheme = (() => {\n    // Initial color theme.\n    let theme = 'light';\n    const storedTheme = localStorage.getItem('theme');\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n    if (storedTheme) {\n        root.setAttribute('data-theme', 'light');\n        if (storedTheme === 'dark') {\n            theme = 'dark';\n        }\n    } else if (mediaQuery.matches) {\n        theme = 'dark';\n    }\n\n    if (theme === 'dark') {\n        root.setAttribute('data-theme', 'dark');\n        return false;\n    }\n\n    root.setAttribute('data-theme', 'light');\n    return true;\n})();\n\nclass Header extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            isLightTheme: detectColorTheme,\n        };\n\n        this.changeTheme = this.changeTheme.bind(this);\n    }\n\n    changeTheme() {\n        this.setState(\n            {\n                isLightTheme: !this.state.isLightTheme,\n            },\n            () => {\n                const theme = this.state.isLightTheme ? 'light' : 'dark';\n                root.setAttribute('data-theme', theme);\n                localStorage.setItem('data-theme', theme);\n            }\n        );\n    }\n\n    render() {\n        const { isLightTheme } = this.state;\n\n        return (\n            <header>\n                <ColorThemeButton themeState={isLightTheme} clickHandler={this.changeTheme} />\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","import Form from '../features/form/screens/Form';\nimport Header from '../features/navbar/screens/Header';\n\nfunction App() {\n    return (\n        <>\n            <Header />\n            <main>\n                <Form />\n            </main>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './root/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}