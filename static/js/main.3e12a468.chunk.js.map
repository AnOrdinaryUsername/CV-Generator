{"version":3,"sources":["reportWebVitals.js","shared/Buttons/Buttons.jsx","features/form/components/CustomEditor.jsx","features/form/components/Inputs.jsx","features/form/components/NewInputs.jsx","features/form/components/FormFieldset.jsx","features/form/components/FormLayout.jsx","features/form/screens/Form.jsx","features/navbar/components/ColorThemeButton.jsx","features/navbar/components/GitHubRepo.jsx","features/navbar/screens/Header.jsx","features/pdf/screens/PageOptions.jsx","utils/utility.js","features/pdf/components/List.jsx","features/pdf/components/Layout.jsx","features/pdf/components/EducationHistory.jsx","features/pdf/components/PersonalInfo.jsx","features/pdf/components/WorkExperience.jsx","features/pdf/components/CV.jsx","features/pdf/components/fonts/DejaVu-Sans.Book.ttf","features/pdf/components/fonts/eb-garamond-v15-latin-700.ttf","features/pdf/components/fonts/eb-garamond-v15-latin-700italic.ttf","features/pdf/components/fonts/eb-garamond-v15-latin-italic.ttf","features/pdf/components/fonts/eb-garamond-v15-latin-regular.ttf","features/pdf/screens/PDF.jsx","root/App.jsx","index.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GoBackButton","onClick","className","icon","faArrowLeft","DownloadButton","faDownload","SubmitButton","ResetFormButton","CustomEditor","props","state","theme","handleEditorChange","bind","html","this","onChange","name","sectionName","value","modules","formats","bounds","id","placeholder","Component","toolbar","list","clipboard","matchVisual","Input","animation","autoComplete","index","isRequired","label","type","inputProps","pattern","Error","input","identifier","undefined","required","htmlFor","NewInfoButton","faPlus","NewInputs","confirmDeletion","handleInputChange","event","preventDefault","window","confirm","removeInputs","target","inputs","enableAnimation","includeDelete","isPresent","map","element","rowStyle","singleStyle","isEditor","row","storedInputs","FormFieldset","info","addNewInfo","removeNewInfo","clearNewInfos","newInputs","length","propsState","JSON","parse","stringify","shift","forEach","additionalInputs","push","setState","prevProps","isReset","updateResetFlag","addNewInput","updatedInfo","NEW_INPUT_START","filter","component","removeNewInput","legend","title","description","isPersonalFieldset","initialInfo","newInfo","indice","start","FormLayout","children","onSubmit","Form","formSection","data","personal","education","work","fieldsetData","key","resetForm","ColorThemeButton","themeState","clickHandler","aria-label","faSun","faMoon","GitHubRepo","rel","href","faGithub","root","document","documentElement","detectColorTheme","storedTheme","localStorage","getItem","mediaQuery","matchMedia","setAttribute","matches","Header","isLightTheme","setItem","changeTheme","Delayed","hidden","setTimeout","waitBeforeShow","PageOptions","fileName","blob","url","loading","error","repeat","objectHasProperty","object","prop","propertyIsEnumerable","call","styles","StyleSheet","create","item","flexDirection","bulletPoint","fontFamily","fontSize","paddingTop","width","itemContent","flex","paddingLeft","Item","blackSmallSquare","String","fromCharCode","style","List","section","heading","borderBottom","fontWeight","marginTop","textTransform","paddingBottom","subSection","SectionHeading","SubSection","marginTopStyle","sectionRow","justifyContent","bold","italic","fontStyle","SubSectionRow","columnOne","columnTwo","styleType","styleFontSize","listItem","boldAndItalic","underline","textDecoration","SubSectionListItem","node","nodeText","DOMParser","parseFromString","textContent","decorationStyle","includes","SubSectionList","parser","querySelectorAll","listNode","childNodeCount","childNodes","i","outerHTML","WorkExperience","firstRowGap","rowGap","userInfo","schoolName","date","editor","fieldOfStudy","location","alignItems","lineHeight","details","specialCharacter","marginLeft","marginRight","PersonalInfo","lastName","firstName","email","phoneNumber","residence","blackDiamond","companyName","jobTitle","page","backgroundColor","padding","CV","userData","EducationHistory","Font","register","family","fonts","src","garamond","garamondBold","garamondItalic","garamondBoldItalic","format","unicodeChar","PDF","userName","author","subject","App","template","isSubmitted","checkStorage","storageItem","submitForm","handleFieldChange","prevState","copyValues","original","valueObject","objectToCopyValueTo","Object","entries","objectToCopyFrom","values","reduce","accum","k","v","newEducation","copiedObject","pop","newWork","clear","UserPDF","height","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3e12a468.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { faArrowLeft, faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport './Buttons.css';\n\nconst GoBackButton = ({ onClick }) => {\n    return (\n        <button className=\"button go-back\" onClick={onClick}>\n            <FontAwesomeIcon icon={faArrowLeft} />\n            Go Back\n        </button>\n    );\n};\n\nconst DownloadButton = () => {\n    return (\n        <button className=\"button button--md download\">\n            <FontAwesomeIcon icon={faDownload} />\n            Download as PDF\n        </button>\n    );\n};\n\nconst SubmitButton = () => {\n    return <button className=\"button submit\">Submit</button>;\n};\n\nconst ResetFormButton = ({ onClick }) => {\n    return (\n        <button onClick={onClick} className=\"button reset-form\">\n            Reset Form\n        </button>\n    );\n};\n\nexport { GoBackButton, DownloadButton, SubmitButton, ResetFormButton };\n","import React, { Component } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport './CustomEditor.css';\n\nclass CustomEditor extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            theme: 'snow',\n        };\n\n        this.handleEditorChange = this.handleEditorChange.bind(this);\n    }\n\n    handleEditorChange(html) {\n        const { onChange, name, sectionName } = this.props;\n\n        onChange(sectionName, name, html);\n    }\n\n    render() {\n        return (\n            <div className=\"text-editor\">\n                <ReactQuill\n                    theme={this.state.theme}\n                    onChange={this.handleEditorChange}\n                    value={this.props.value}\n                    modules={CustomEditor.modules}\n                    formats={CustomEditor.formats}\n                    bounds={'.text-editor'}\n                    id={this.props.id}\n                    placeholder={this.props.placeholder}\n                />\n            </div>\n        );\n    }\n}\n\n/*\n * Quill modules to attach to editor\n * See https://quilljs.com/docs/modules/ for complete options\n */\nCustomEditor.modules = {\n    toolbar: [['bold', 'italic', 'underline'], [{ list: 'bullet' }], ['clean']],\n    clipboard: {\n        // toggle to add extra line breaks when pasting HTML:\n        matchVisual: false,\n    },\n};\n\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nCustomEditor.formats = ['bold', 'italic', 'underline', 'list', 'bullet'];\n\nexport default CustomEditor;\n","import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport '../../../shared/Buttons/Buttons.css';\nimport CustomEditor from '../components/CustomEditor';\nimport './Inputs.css';\n\nconst Input = ({\n    animation,\n    autoComplete,\n    index,\n    isRequired,\n    label,\n    name,\n    onChange,\n    placeholder,\n    sectionName,\n    type,\n    value,\n}) => {\n    const inputProps = {};\n\n    switch (type) {\n        case 'text':\n            // Allows all language characters. \\w allows whitespace\n            inputProps.pattern = '^[\\\\p{L}\\\\p{M}., ]*$';\n            inputProps.type = 'text';\n            break;\n        case 'textDate':\n            inputProps.pattern = '^[\\\\p{L}\\\\p{M}0-9\\\\-., ]*$';\n            inputProps.type = 'text';\n            break;\n        case 'email':\n            inputProps.type = 'email';\n            break;\n        case 'tel':\n            inputProps.type = 'tel';\n            break;\n        // Custom Editor from react-quill\n        case 'editor':\n            break;\n        default:\n            throw new Error(`Unknown input type ${type} passed to <Input />.`);\n    }\n\n    let input = null;\n    let identifier = index !== undefined ? `${name}${index}` : name;\n\n    if (type === 'editor') {\n        input = (\n            <CustomEditor\n                id={identifier}\n                onChange={onChange}\n                value={value[identifier]}\n                name={identifier}\n                placeholder={placeholder}\n                sectionName={sectionName}\n            />\n        );\n    } else {\n        input = (\n            <input\n                autoComplete={autoComplete || 'off'}\n                id={identifier}\n                name={identifier} // Used for setting values in state\n                placeholder={placeholder}\n                required={isRequired}\n                value={value[identifier]} // Value in text\n                {...inputProps}\n                onChange={onChange}\n            />\n        );\n    }\n\n    return (\n        <div className={animation ? `input ${animation}` : 'input'}>\n            <label htmlFor={identifier}>{label}</label>\n            {input}\n        </div>\n    );\n};\n\nconst NewInfoButton = ({ onClick }) => {\n    return (\n        <button className=\"button button--md new-info\" onClick={onClick}>\n            <FontAwesomeIcon icon={faPlus} />\n            Add more information\n        </button>\n    );\n};\n\nexport { Input, NewInfoButton };\n","import React, { Component } from 'react';\nimport '../../../shared/Buttons/Buttons.css';\nimport { Input } from '../components/Inputs';\nimport './FormFieldset.css';\n\nclass NewInputs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.confirmDeletion = this.confirmDeletion.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    confirmDeletion(event) {\n        event.preventDefault();\n\n        if (window.confirm('Are you sure you want to delete this item?')) {\n            const { index } = this.props;\n            this.props.removeInputs(index);\n        }\n    }\n\n    handleInputChange(event) {\n        const { name, value } = event.target;\n        this.props.onChange(this.props.sectionName, name, value);\n    }\n\n    render() {\n        const { inputs, enableAnimation, includeDelete, onChange, isPresent } = this.props;\n\n        return (\n            <>\n                {isPresent && (\n                    <div className=\"new-inputs\">\n                        {inputs.map((element, index) => {\n                            // Show animation only when adding new inputs.\n                            const rowStyle = enableAnimation ? `row text-anim-${index + 1}` : 'row';\n                            const singleStyle = enableAnimation ? `text-anim-${index + 1}` : null;\n                            const isEditor = element.type === 'editor';\n\n                            if (element.row) {\n                                return (\n                                    <div className={rowStyle}>\n                                        {element.row.map((props) => {\n                                            return (\n                                                <Input\n                                                    {...props}\n                                                    value={this.props.storedInputs}\n                                                    index={this.props.index}\n                                                    onChange={\n                                                        isEditor ? onChange : this.handleInputChange\n                                                    }\n                                                />\n                                            );\n                                        })}\n                                    </div>\n                                );\n                            }\n\n                            return (\n                                <Input\n                                    animation={singleStyle}\n                                    value={this.props.storedInputs}\n                                    index={this.props.index}\n                                    // For CustomEditor\n                                    sectionName={this.props.sectionName}\n                                    {...element}\n                                    onChange={isEditor ? onChange : this.handleInputChange}\n                                />\n                            );\n                        })}\n                        {includeDelete && (\n                            <button\n                                className=\"button button--sm delete text-anim-4\"\n                                onClick={this.confirmDeletion}\n                            >\n                                Delete\n                            </button>\n                        )}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default NewInputs;\n","import React, { Component } from 'react';\nimport { NewInfoButton } from '../components/Inputs';\nimport './FormFieldset.css';\nimport NewInputs from './NewInputs';\n\nclass FormFieldset extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            info: [],\n        };\n\n        this.addNewInfo = this.addNewInfo.bind(this);\n        this.removeNewInfo = this.removeNewInfo.bind(this);\n        this.clearNewInfos = this.clearNewInfos.bind(this);\n    }\n\n    // Could've been done in the constructor but there's a lot of code.\n    componentDidMount() {\n        let newInputs = [];\n        const { storedInputs } = this.props;\n        const INITIAL_INPUT_LENGTH = 1;\n\n        if (storedInputs.length > INITIAL_INPUT_LENGTH) {\n            // Deep clone so we don't delete the first element in passed state.\n            const propsState = JSON.parse(JSON.stringify(storedInputs));\n            // No need to have initial values in. Only new inputs.\n            propsState.shift();\n\n            const { inputs, onChange, sectionName } = this.props;\n\n            propsState.forEach(() => {\n                const additionalInputs = {\n                    inputs: inputs,\n                    sectionName: sectionName,\n                    isPresent: true,\n                    removeInputs: this.removeNewInfo,\n                    enableAnimation: true,\n                    includeDelete: true,\n                    onChange: onChange,\n                };\n\n                newInputs.push(additionalInputs);\n            });\n\n            this.setState({\n                info: [...newInputs],\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.isReset !== prevProps.isReset) {\n            // This will cause 2 rerenders\n            this.clearNewInfos();\n            this.props.updateResetFlag();\n        }\n    }\n\n    clearNewInfos() {\n        this.setState({\n            info: [],\n        });\n    }\n\n    addNewInfo(event) {\n        event.preventDefault();\n\n        const newInputs = this.props.inputs;\n        const { sectionName, onChange } = this.props;\n\n        const inputs = {\n            inputs: newInputs,\n            sectionName: sectionName,\n            isPresent: true,\n            removeInputs: this.removeNewInfo,\n            enableAnimation: true,\n            includeDelete: true,\n            onChange: onChange,\n        };\n\n        this.props.addNewInput(sectionName, this.state.info.length);\n\n        this.setState({\n            info: [...this.state.info, inputs],\n        });\n    }\n\n    removeNewInfo(index) {\n        const updatedInfo = [...this.state.info];\n        const NEW_INPUT_START = index + 1;\n        updatedInfo[index].isPresent = !updatedInfo[index].isPresent;\n\n        this.setState(\n            {\n                info: updatedInfo.filter((component) => component.isPresent),\n            },\n            () => {\n                const { removeNewInput, sectionName } = this.props;\n                removeNewInput(sectionName, NEW_INPUT_START);\n            }\n        );\n    }\n\n    render() {\n        const { title, description } = this.props.legend;\n        // Don't show <NewInfoButton /> on 'Personal Information' fieldset since they're is no\n        // reason to add more personal info.\n        const isPersonalFieldset = title === 'Personal Information';\n\n        const initialInfo = (\n            <NewInputs\n                inputs={this.props.inputs}\n                // Passed state\n                storedInputs={this.props.storedInputs[0]} // array and use index to access storedInputs\n                sectionName={this.props.sectionName}\n                isPresent={true}\n                enableAnimation={false}\n                includeDelete={false}\n                onChange={this.props.onChange}\n            />\n        );\n\n        const { info } = this.state;\n        let newInfo = null;\n\n        if (info.length !== 0 && !this.props.isReset) {\n            newInfo = info.map((props, indice) => {\n                // index is used as an identifier for newly add inputs\n                // storedInputs begin at 1 since initialInfo (name with no identifier) begins at 0\n                const NEW_INFO_START = 1;\n                const start = indice + NEW_INFO_START;\n                return (\n                    <NewInputs\n                        {...props}\n                        // Assign an index to each input's name attribute for differentiation.\n                        // Ex. name = 'schoolName0' for a newly added info input\n                        index={indice}\n                        storedInputs={this.props.storedInputs[start]}\n                    />\n                );\n            });\n        }\n\n        return (\n            <fieldset>\n                <legend className=\"legend\">\n                    <h2>{title}</h2>\n                    <p>{description}</p>\n                </legend>\n                <div className=\"input-container\">\n                    {initialInfo}\n                    {newInfo}\n                    {!isPersonalFieldset && <NewInfoButton onClick={this.addNewInfo} />}\n                </div>\n            </fieldset>\n        );\n    }\n}\n\nexport default FormFieldset;\n","import React from 'react';\nimport './FormLayout.css';\n\nconst FormLayout = ({ children, onSubmit }) => {\n    return (\n        <section className=\"form-container\">\n            <form className=\"form form--round\" onSubmit={onSubmit}>\n                {children}\n            </form>\n        </section>\n    );\n};\n\nexport default FormLayout;\n","import React, { Component } from 'react';\nimport { ResetFormButton, SubmitButton } from '../../../shared/Buttons/Buttons';\nimport FormFieldset from '../components/FormFieldset';\nimport FormLayout from '../components/FormLayout';\nimport './Form.css';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n\n        // Template for inputs.\n        this.formSection = [\n            {\n                legend: {\n                    title: 'Personal Information',\n                    description:\n                        'Share your contact information so companies know how to reach you.',\n                },\n                inputs: [\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'First Name',\n                                isRequired: true,\n                                name: 'firstName',\n                                placeholder: 'e.g. Biggy',\n                                autoComplete: 'given-name',\n                            },\n                            {\n                                type: 'text',\n                                label: 'Last Name',\n                                isRequired: true,\n                                name: 'lastName',\n                                placeholder: 'e.g. Enterprise',\n                                autoComplete: 'family-name',\n                            },\n                        ],\n                    },\n                    {\n                        row: [\n                            {\n                                type: 'email',\n                                label: 'Email address',\n                                isRequired: true,\n                                name: 'email',\n                                placeholder: 'e.g. enterprise6@email.com',\n                                autoComplete: 'email',\n                            },\n                            {\n                                type: 'tel',\n                                label: 'Phone Number',\n                                isRequired: true,\n                                name: 'phoneNumber',\n                                placeholder: 'e.g. (123) 456-7890',\n                                autoComplete: 'tel',\n                            },\n                        ],\n                    },\n                    {\n                        type: 'text',\n                        label: 'Residence',\n                        isRequired: true,\n                        name: 'residence',\n                        placeholder: 'e.g. Newport News, US',\n                        autoComplete: 'country-name',\n                    },\n                ],\n            },\n            {\n                legend: {\n                    title: 'Education History',\n                    description:\n                        'Having a degree demonstrates an ability to learn. Although not required, you may include it if you wish to share.',\n                },\n                inputs: [\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'School Name',\n                                isRequired: false,\n                                name: 'schoolName',\n                                placeholder: 'e.g. Harvard University',\n                            },\n                            {\n                                type: 'text',\n                                label: 'Field of Study',\n                                isRequired: false,\n                                name: 'fieldOfStudy',\n                                placeholder: 'e.g. Computer Science, B.S.',\n                            },\n                        ],\n                    },\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'Location',\n                                isRequired: false,\n                                name: 'location',\n                                placeholder: 'e.g. Oahu, HI',\n                            },\n                            {\n                                type: 'textDate',\n                                label: 'Date',\n                                isRequired: false,\n                                name: 'date',\n                                placeholder: 'e.g. May 1938 - Feb. 1947',\n                            },\n                        ],\n                    },\n                    {\n                        type: 'editor',\n                        label: 'Details',\n                        name: 'editor',\n                        placeholder:\n                            'List all descriptions of important academic achievements in bullet points.',\n                    },\n                ],\n            },\n            {\n                legend: {\n                    title: 'Work Experience',\n                    description:\n                        'Employers love practical experience. Show them what skills you bring to the table.',\n                },\n                inputs: [\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'Company Name',\n                                isRequired: false,\n                                name: 'companyName',\n                                placeholder: 'e.g. US Navy',\n                            },\n                            {\n                                type: 'text',\n                                label: 'Job Title',\n                                isRequired: false,\n                                name: 'jobTitle',\n                                placeholder: 'e.g. Aircraft Carrier',\n                            },\n                        ],\n                    },\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'Location',\n                                isRequired: false,\n                                name: 'location',\n                                placeholder: 'e.g. Oahu, HI',\n                            },\n                            {\n                                type: 'textDate',\n                                label: 'Date',\n                                isRequired: false,\n                                name: 'date',\n                                placeholder: 'e.g. May 1938 - Feb. 1947',\n                            },\n                        ],\n                    },\n                    {\n                        type: 'editor',\n                        label: 'Details',\n                        name: 'editor',\n                        placeholder:\n                            'List all descriptions of applied skills and roles in bullet points.',\n                    },\n                ],\n            },\n        ];\n    }\n\n    render() {\n        // Passed App state.\n        const { personal, education, work } = this.props.storedInputs;\n        // Arrays with object data\n        const data = [personal, education, work];\n        const sectionName = ['personal', 'education', 'work'];\n\n        return (\n            <FormLayout onSubmit={this.props.onSubmit}>\n                {this.formSection.map((fieldsetData, index) => {\n                    return (\n                        <FormFieldset\n                            {...fieldsetData}\n                            {...this.props}\n                            storedInputs={data[index]}\n                            sectionName={sectionName[index]}\n                            key={index}\n                        />\n                    );\n                })}\n                <div className=\"button-container\">\n                    <ResetFormButton onClick={this.props.resetForm} />\n                    <SubmitButton />\n                </div>\n            </FormLayout>\n        );\n    }\n}\n\nexport default Form;\n","import { faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nconst ColorThemeButton = ({ themeState, clickHandler }) => {\n    return (\n        <button\n            aria-label={themeState ? 'Activate dark theme' : 'Activate light theme'}\n            onClick={clickHandler}\n        >\n            <FontAwesomeIcon icon={themeState ? faSun : faMoon} />\n        </button>\n    );\n};\n\nexport default ColorThemeButton;\n","import { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nconst GitHubRepo = () => {\n    return (\n        <a\n            aria-label=\"View the source code repository.\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/AnOrdinaryUsername/cv-project\"\n        >\n            <FontAwesomeIcon icon={faGithub} />\n        </a>\n    );\n};\n\nexport default GitHubRepo;\n","import React, { Component } from 'react';\nimport ColorThemeButton from '../components/ColorThemeButton';\nimport GitHubRepo from '../components/GitHubRepo';\n\nconst root = document.documentElement;\n\nconst detectColorTheme = (() => {\n    // Initial color theme.\n    let theme = 'light';\n    const storedTheme = localStorage.getItem('theme');\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n    if (storedTheme) {\n        root.setAttribute('data-theme', 'light');\n        if (storedTheme === 'dark') {\n            theme = 'dark';\n        }\n    } else if (mediaQuery.matches) {\n        theme = 'dark';\n    }\n\n    if (theme === 'dark') {\n        root.setAttribute('data-theme', 'dark');\n        return false;\n    }\n\n    root.setAttribute('data-theme', 'light');\n    return true;\n})();\n\nclass Header extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            isLightTheme: detectColorTheme,\n        };\n\n        if (this.state.isLightTheme) {\n            localStorage.setItem('theme', 'light');\n        } else {\n            localStorage.setItem('theme', 'dark');\n        }\n\n        this.changeTheme = this.changeTheme.bind(this);\n    }\n\n    changeTheme() {\n        this.setState(\n            {\n                isLightTheme: !this.state.isLightTheme,\n            },\n            () => {\n                const theme = this.state.isLightTheme ? 'light' : 'dark';\n                root.setAttribute('data-theme', theme);\n                localStorage.setItem('theme', theme);\n            }\n        );\n    }\n\n    render() {\n        const { isLightTheme } = this.state;\n\n        return (\n            <header>\n                <GitHubRepo />\n                <ColorThemeButton themeState={isLightTheme} clickHandler={this.changeTheme} />\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","import { PDFDownloadLink } from '@react-pdf/renderer';\nimport React, { Component } from 'react';\nimport { DownloadButton, GoBackButton } from '../../../shared/Buttons/Buttons';\nimport './PageOptions.css';\n\n/*  For some odd reason, having a <PDFDownloadLink /> and a <PDFViewer /> on\n *   the same page causes a 'Cannot read property 'hasGlyphForCodePoint' of null' error'.\n *   Delaying the rendering of the <PDFDownloadLink /> seems to fix it.\n *\n *   From here: https://stackoverflow.com/a/51771466\n */\nclass Delayed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { hidden: true };\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({ hidden: false });\n        }, this.props.waitBeforeShow);\n    }\n\n    render() {\n        return this.state.hidden ? '' : this.props.children;\n    }\n}\n\nconst PageOptions = ({ document, fileName, onClick }) => {\n    return (\n        <div className=\"page-options\">\n            <GoBackButton onClick={onClick} />\n            {/* Scuffed fix for 'Cannot read property 'hasGlyphForCodePoint' of null' error. */}\n            <Delayed waitBeforeShow={1000}>\n                <PDFDownloadLink document={document} fileName={fileName}>\n                    {({ blob, url, loading, error }) =>\n                        loading ? 'Loading document...' : <DownloadButton />\n                    }\n                </PDFDownloadLink>\n            </Delayed>\n        </div>\n    );\n};\n\nexport default PageOptions;\n","// object => object literal\n// prop => string (the property inside the object literal)\n// return => boolean\nconst objectHasProperty = (object, prop) => ({}.propertyIsEnumerable.call(object, prop));\n\n// Just to assign multiple variables a single value easily.\nfunction* repeat(value) {\n    while (true) {\n        yield value;\n    }\n}\n\nexport { objectHasProperty, repeat };\n","import { StyleSheet, Text, View } from '@react-pdf/renderer';\nimport React from 'react';\n\nconst styles = StyleSheet.create({\n    item: {\n        flexDirection: 'row',\n    },\n    bulletPoint: {\n        fontFamily: 'DejaVu Sans',\n        fontSize: 6,\n        paddingTop: 4,\n        width: 12,\n    },\n    itemContent: {\n        flex: 1,\n        fontSize: 12,\n        fontFamily: 'Garamond',\n        paddingLeft: 6,\n    },\n});\n\nconst List = ({ children }) => children;\n\nexport const Item = ({ children }) => {\n    // This unicode character \"▪\".\n    const blackSmallSquare = String.fromCharCode(0x25aa);\n\n    return (\n        <View style={styles.item}>\n            <Text style={styles.bulletPoint}>{blackSmallSquare}</Text>\n            <Text style={styles.itemContent}>{children}</Text>\n        </View>\n    );\n};\n\nexport default List;\n","import { StyleSheet, Text, View } from '@react-pdf/renderer';\nimport React from 'react';\nimport List, { Item } from './List';\n\nconst section = StyleSheet.create({\n    heading: {\n        borderBottom: '1 solid #000000',\n        fontFamily: 'Garamond',\n        fontSize: 12,\n        fontWeight: 'bold',\n        marginTop: 16,\n        textTransform: 'uppercase',\n        paddingBottom: 2,\n    },\n    subSection: {\n        marginTop: 8,\n    },\n});\n\nconst SectionHeading = ({ title }) => {\n    return <Text style={section.heading}>{title}</Text>;\n};\n\nconst SubSection = ({ children, marginTop }) => {\n    const marginTopStyle = {\n        marginTop: marginTop,\n    };\n\n    return <View style={marginTopStyle}>{children}</View>;\n};\n\nconst sectionRow = StyleSheet.create({\n    row: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    bold: {\n        fontFamily: 'Garamond',\n        fontWeight: 'bold',\n    },\n    italic: {\n        fontFamily: 'Garamond',\n        fontStyle: 'italic',\n    },\n});\n\nconst SubSectionRow = ({ type, fontSize, columnOne, columnTwo }) => {\n    let styleType = null;\n\n    switch (type) {\n        case 'bold':\n            styleType = sectionRow.bold;\n            break;\n        case 'italic':\n            styleType = sectionRow.italic;\n            break;\n        default:\n            throw new Error(\n                `Unknown type '${type}' was passed to <SubSectionRow>.` +\n                    `Only valid types are 'bold' and 'italic'.`\n            );\n    }\n\n    let styleFontSize = null;\n    if (typeof fontSize === 'string')\n        switch (fontSize) {\n            case 'sm':\n                styleFontSize = {\n                    fontSize: 12,\n                };\n                break;\n\n            case 'med':\n                styleFontSize = {\n                    fontSize: 16,\n                };\n                break;\n\n            case 'lg':\n                styleFontSize = {\n                    fontSize: 24,\n                };\n                break;\n\n            default:\n                throw new Error(\n                    `Unknown fontSize '${type}' was passed to <SubSectionRow>.` +\n                        `Only valid fontSizes are 'sm', 'med', 'lg', or a number.`\n                );\n        }\n    else {\n        styleFontSize = {\n            fontSize: fontSize,\n        };\n    }\n\n    return (\n        <View style={[sectionRow.row, styleType, styleFontSize]}>\n            <Text>{columnOne}</Text>\n            <Text>{columnTwo}</Text>\n        </View>\n    );\n};\n\nconst item = StyleSheet.create({\n    listItem: {\n        fontFamily: 'Garamond',\n    },\n    bold: {\n        fontWeight: 'bold',\n    },\n    italic: {\n        fontStyle: 'italic',\n    },\n    boldAndItalic: {\n        fontWeight: 'bold',\n        fontStyle: 'italic',\n    },\n    underline: {\n        textDecoration: 'underline',\n    },\n});\n\nconst SubSectionListItem = ({ node }) => {\n    const nodeText = new DOMParser().parseFromString(node, 'text/html').documentElement.textContent;\n\n    let fontStyle = null;\n    let decorationStyle = null;\n\n    if (node.includes('<strong>') && node.includes('<em>')) {\n        fontStyle = item.boldAndItalic;\n    } else if (node.includes('<strong>')) {\n        fontStyle = item.bold;\n    } else if (node.includes('<em>')) {\n        fontStyle = item.italic;\n    }\n\n    if (node.includes('<u>')) {\n        decorationStyle = item.underline;\n    }\n\n    return <Text style={[item.listItem, fontStyle, decorationStyle]}>{nodeText}</Text>;\n};\n\nconst SubSectionList = ({ data }) => {\n    const parser = new DOMParser().parseFromString(data, 'text/html');\n    // Stores all <li>s and their contents in 1D array.\n    const bulletPoints = [...parser.querySelectorAll('li')];\n\n    /* Goes through each <li> and stores all the individual nodes in an array (which is inside\n     *  another array so it's 2D).\n     *\n     * e.g. const bulletPoints = [ \"<li>Wowee<li>\", \"<li><em>italic</em> text</li>\"];\n     *\n     *       map result:\n     *       const list = [ [\"Wowee\"], [\"<em>italic</em>\", \" text\"] ];\n     */\n    const list = bulletPoints.map((listItem) => {\n        const listNode = [];\n        const childNodeCount = listItem.childNodes.length;\n\n        for (let i = 0; i < childNodeCount; ++i) {\n            const node = listItem.childNodes[i];\n\n            // If node is of type 'Element' return HTML string\n            if (node.outerHTML) {\n                listNode.push(node.outerHTML);\n                // Otherwise grab text from 'Text' node\n            } else {\n                listNode.push(node.textContent);\n            }\n        }\n\n        return listNode;\n    });\n\n    return (\n        <View>\n            <List>\n                {list.map((item) => {\n                    return (\n                        <Item>\n                            {item.map((node) => {\n                                return <SubSectionListItem node={node} />;\n                            })}\n                        </Item>\n                    );\n                })}\n            </List>\n        </View>\n    );\n};\n\nexport { SectionHeading, SubSection, SubSectionRow, SubSectionList };\n","import { View } from '@react-pdf/renderer';\nimport React from 'react';\nimport { repeat } from '../../../utils/utility';\nimport { SectionHeading, SubSection, SubSectionList, SubSectionRow } from './Layout';\n\nconst WorkExperience = ({ firstRowGap, rowGap, userInfo }) => {\n    return (\n        <View>\n            <SectionHeading title=\"Education\" />\n            {userInfo.map((data, index) => {\n                let [schoolName, date, editor, id, fieldOfStudy, location] = repeat(null);\n\n                if (index > 0) {\n                    id = index - 1;\n                    schoolName = `schoolName${id}`;\n                    date = `date${id}`;\n                    fieldOfStudy = `fieldOfStudy${id}`;\n                    location = `location${id}`;\n                    editor = `editor${id}`;\n                } else {\n                    schoolName = 'schoolName';\n                    date = 'date';\n                    fieldOfStudy = 'fieldOfStudy';\n                    location = 'location';\n                    editor = 'editor';\n                }\n\n                return (\n                    <SubSection marginTop={index === 0 ? firstRowGap : rowGap}>\n                        <SubSectionRow\n                            type=\"bold\"\n                            fontSize=\"sm\"\n                            columnOne={data[schoolName]}\n                            columnTwo={data[date]}\n                        />\n                        <SubSectionRow\n                            type=\"italic\"\n                            fontSize=\"sm\"\n                            columnOne={data[fieldOfStudy]}\n                            columnTwo={data[location]}\n                        />\n                        <SubSectionList data={data[editor]} />\n                    </SubSection>\n                );\n            })}\n        </View>\n    );\n};\n\nexport default WorkExperience;\n","import { StyleSheet, Text, View } from '@react-pdf/renderer';\nimport React from 'react';\n\nconst styles = StyleSheet.create({\n    section: {\n        alignItems: 'baseline',\n        borderBottom: '1 solid #000000',\n        flexDirection: 'column',\n        paddingBottom: 4,\n        justifyContent: 'flex-start',\n    },\n    name: {\n        fontFamily: 'Garamond',\n        fontWeight: 'bold',\n        fontSize: 24,\n        lineHeight: 1.2,\n    },\n    details: {\n        alignItems: 'baseline',\n        flexDirection: 'row',\n        fontFamily: 'Garamond',\n        fontSize: 16,\n        justifyContent: 'flex-start',\n    },\n    specialCharacter: {\n        fontFamily: 'DejaVu Sans',\n        marginLeft: 4,\n        marginRight: 4,\n    },\n});\n\nconst PersonalInfo = ({ userInfo }) => {\n    const { lastName, firstName, email, phoneNumber, residence } = userInfo;\n\n    // This unicode character \"❖\".\n    const blackDiamond = String.fromCharCode(0x2756);\n\n    return (\n        <View style={styles.section}>\n            <Text style={styles.name}>{`${firstName} ${lastName}`}</Text>\n            <View style={styles.details}>\n                <Text>{email}</Text>\n                <Text style={styles.specialCharacter}>{blackDiamond}</Text>\n                <Text>{phoneNumber}</Text>\n                <Text style={styles.specialCharacter}>{blackDiamond}</Text>\n                <Text>{residence}</Text>\n            </View>\n        </View>\n    );\n};\n\nexport default PersonalInfo;\n","import { View } from '@react-pdf/renderer';\nimport React from 'react';\nimport { repeat } from '../../../utils/utility';\nimport { SectionHeading, SubSection, SubSectionList, SubSectionRow } from './Layout';\n\nconst WorkExperience = ({ firstRowGap, rowGap, userInfo }) => {\n    return (\n        <View>\n            <SectionHeading title=\"Work Experience\" />\n            {userInfo.map((data, index) => {\n                let [companyName, date, editor, id, jobTitle, location] = repeat(null);\n\n                if (index > 0) {\n                    id = index - 1;\n                    companyName = `companyName${id}`;\n                    date = `date${id}`;\n                    jobTitle = `jobTitle${id}`;\n                    location = `location${id}`;\n                    editor = `editor${id}`;\n                } else {\n                    companyName = 'companyName';\n                    date = 'date';\n                    jobTitle = 'jobTitle';\n                    location = 'location';\n                    editor = 'editor';\n                }\n\n                return (\n                    <SubSection marginTop={index === 0 ? firstRowGap : rowGap}>\n                        <SubSectionRow\n                            type=\"bold\"\n                            fontSize=\"sm\"\n                            columnOne={data[companyName]}\n                            columnTwo={data[date]}\n                        />\n                        <SubSectionRow\n                            type=\"italic\"\n                            fontSize=\"sm\"\n                            columnOne={data[jobTitle]}\n                            columnTwo={data[location]}\n                        />\n                        <SubSectionList data={data[editor]} />\n                    </SubSection>\n                );\n            })}\n        </View>\n    );\n};\n\nexport default WorkExperience;\n","import { Page, StyleSheet } from '@react-pdf/renderer';\nimport React from 'react';\nimport EducationHistory from './EducationHistory';\nimport PersonalInfo from './PersonalInfo';\nimport WorkExperience from './WorkExperience';\n\nconst styles = StyleSheet.create({\n    page: {\n        backgroundColor: '#FFFFFF',\n        justifyContent: 'flex-start',\n        padding: 36,\n        width: '100%',\n    },\n});\n\nconst CV = ({ userData }) => {\n    const FIRST_ROW_GAP = 8;\n    const ROW_GAP = 14;\n\n    return (\n        <Page style={styles.page}>\n            <PersonalInfo userInfo={userData.personal[0]} />\n            <WorkExperience userInfo={userData.work} firstRowGap={FIRST_ROW_GAP} rowGap={ROW_GAP} />\n            <EducationHistory\n                userInfo={userData.education}\n                firstRowGap={FIRST_ROW_GAP}\n                rowGap={ROW_GAP}\n            />\n        </Page>\n    );\n};\n\nexport default CV;\n","export default __webpack_public_path__ + \"static/media/DejaVu-Sans.Book.3765b612.ttf\";","export default __webpack_public_path__ + \"static/media/eb-garamond-v15-latin-700.a6cfee19.ttf\";","export default __webpack_public_path__ + \"static/media/eb-garamond-v15-latin-700italic.dfee03d9.ttf\";","export default __webpack_public_path__ + \"static/media/eb-garamond-v15-latin-italic.55614b12.ttf\";","export default __webpack_public_path__ + \"static/media/eb-garamond-v15-latin-regular.64dc02bf.ttf\";","import { Document, Font } from '@react-pdf/renderer';\nimport React from 'react';\nimport CV from '../components/CV';\nimport unicodeChar from '../components/fonts/DejaVu-Sans.Book.ttf';\nimport garamondBold from '../components/fonts/eb-garamond-v15-latin-700.ttf';\nimport garamondBoldItalic from '../components/fonts/eb-garamond-v15-latin-700italic.ttf';\nimport garamondItalic from '../components/fonts/eb-garamond-v15-latin-italic.ttf';\nimport garamond from '../components/fonts/eb-garamond-v15-latin-regular.ttf';\n\n/**\n *  NOTE: All Garamond fonts were downloaded from here:\n *  https://google-webfonts-helper.herokuapp.com/fonts/eb-garamond?subsets=latin\n *\n *  For some reason, downloading the ttfs from Google Fonts didn't work, nor did using\n *  a Google Fonts url work either.\n */\nFont.register({\n    family: 'Garamond',\n    fonts: [\n        {\n            src: garamond,\n        },\n        {\n            src: garamondBold,\n            fontWeight: 'bold',\n        },\n        {\n            src: garamondItalic,\n            fontStyle: 'italic',\n        },\n        {\n            src: garamondBoldItalic,\n            fontWeight: 'bold',\n            fontStyle: 'italic',\n        },\n    ],\n});\n\n// Just for these characters \"❖\" abd  \"▪\"\nFont.register({\n    family: 'DejaVu Sans',\n    format: 'truetype',\n    src: unicodeChar,\n});\n\nconst PDF = ({ data }) => {\n    const { firstName, lastName } = data.personal[0];\n    const userName = `${firstName} ${lastName}`;\n\n    return (\n        {\n            /* \n            Basically just following this:\n            https://commonlook.com/the-relevance-of-metadata-in-accessible-pdfs/\n        */\n        },\n        (\n            <Document\n                author={`${userName}`}\n                subject={`Curriculum Vitae for ${userName}`}\n                title={`Curriculum Vitae for ${userName}`}\n            >\n                <CV userData={data} />\n            </Document>\n        )\n    );\n};\n\nexport default PDF;\n","import { PDFViewer } from '@react-pdf/renderer';\nimport React, { Component } from 'react';\nimport Form from '../features/form/screens/Form';\nimport Header from '../features/navbar/screens/Header';\nimport { PageOptions, PDF } from '../features/pdf/screens';\nimport { objectHasProperty, repeat } from '../utils/utility';\n\nclass App extends Component {\n    constructor() {\n        super();\n\n        this.template = {\n            isSubmitted: false,\n            isReset: false,\n            personal: [\n                {\n                    firstName: '',\n                    lastName: '',\n                    email: '',\n                    phoneNumber: '',\n                    residence: '',\n                },\n            ],\n            education: [\n                {\n                    schoolName: '',\n                    fieldOfStudy: '',\n                    location: '',\n                    date: '',\n                    editor:\n                        '<ul><li><strong>Current GPA</strong>: 4.0</li><li><strong>Projects</strong>: Facebook clone, Battleship</li></ul>',\n                },\n            ],\n            work: [\n                {\n                    companyName: '',\n                    jobTitle: '',\n                    location: '',\n                    date: '',\n                    editor:\n                        '<ul><li>Coordinated movement of air wings at the Battle of Midway.</li></ul>',\n                },\n            ],\n        };\n\n        let [personal, education, work] = repeat(null);\n\n        const checkStorage = (storageItem) => {\n            const item = localStorage.getItem(storageItem);\n\n            if (item) {\n                return JSON.parse(item);\n            }\n\n            return this.template[storageItem];\n        };\n\n        personal = checkStorage('personal');\n        education = checkStorage('education');\n        work = checkStorage('work');\n\n        const { isSubmitted, isReset } = this.template;\n\n        this.state = {\n            isSubmitted: isSubmitted,\n            isReset: isReset,\n            personal: [...personal],\n            education: [...education],\n            work: [...work],\n        };\n\n        this.submitForm = this.submitForm.bind(this);\n        this.resetForm = this.resetForm.bind(this);\n        this.updateResetFlag = this.updateResetFlag.bind(this);\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.addNewInput = this.addNewInput.bind(this);\n        this.removeNewInput = this.removeNewInput.bind(this);\n    }\n\n    addNewInput(sectionName, index) {\n        switch (sectionName) {\n            case 'education': {\n                const schoolName = `schoolName${index}`;\n                const fieldOfStudy = `fieldOfStudy${index}`;\n                const location = `location${index}`;\n                const date = `date${index}`;\n                const editor = `editor${index}`;\n\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        education: [\n                            ...prevState.education,\n                            {\n                                [schoolName]: '',\n                                [fieldOfStudy]: '',\n                                [location]: '',\n                                [date]: '',\n                                [editor]:\n                                    '<ul><li><strong>Current GPA</strong>: 4.0</li><li><strong>Projects</strong>: Facebook clone, Battleship</li></ul>',\n                            },\n                        ],\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.education));\n                    }\n                );\n                break;\n            }\n            case 'work': {\n                const companyName = `companyName${index}`;\n                const jobTitle = `jobTitle${index}`;\n                const location = `location${index}`;\n                const date = `date${index}`;\n                const editor = `editor${index}`;\n\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        work: [\n                            ...prevState.work,\n                            {\n                                [companyName]: '',\n                                [jobTitle]: '',\n                                [location]: '',\n                                [date]: '',\n                                [editor]:\n                                    '<ul><li>Coordinated movement of air wings at the Battle of Midway.</li></ul>',\n                            },\n                        ],\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.work));\n                    }\n                );\n                break;\n            }\n            default:\n                throw new Error(\n                    `Unexpected section name '${sectionName}' was passed.` +\n                        \"Only valid names are 'work' and 'education'.\"\n                );\n        }\n    }\n\n    removeNewInput(sectionName, index) {\n        // original => The object to copy the values to\n        // valueObject => The object passing the values\n        // Note: Both objects have to be the same length.\n        const copyValues = (original, valueObject) => {\n            const objectToCopyValueTo = Object.entries(original);\n            const objectToCopyFrom = Object.values(valueObject);\n\n            objectToCopyValueTo.forEach((element, index) => {\n                const value = 1;\n                element[value] = objectToCopyFrom[index];\n            });\n\n            const copiedObject = objectToCopyValueTo.reduce((accum, [k, v]) => {\n                accum[k] = v;\n                return accum;\n            }, {});\n\n            return copiedObject;\n        };\n\n        switch (sectionName) {\n            case 'education':\n                const newEducation = [...this.state.education];\n\n                for (let i = index; i < newEducation.length; ++i) {\n                    const start = i + 1;\n\n                    if (start >= newEducation.length) {\n                        break;\n                    }\n\n                    const copiedObject = copyValues(newEducation[i], newEducation[start]);\n                    newEducation[i] = copiedObject;\n                }\n\n                /*  It's a pop operation since the order stays the same and\n                 *   we only need to remove the newest input.\n                 *\n                 *   This is due to the fact that the map() on the line 133 in FormFieldset.jsx\n                 *   passes an index to access App state.\n                 */\n                newEducation.pop();\n\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        education: newEducation,\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.education));\n                    }\n                );\n                break;\n\n            case 'work':\n                const newWork = [...this.state.work];\n\n                for (let i = index; i < newWork.length; ++i) {\n                    const start = i + 1;\n\n                    if (start >= newWork.length) {\n                        break;\n                    }\n\n                    const copiedObject = copyValues(newWork[i], newWork[start]);\n                    newWork[i] = copiedObject;\n                }\n\n                newWork.pop();\n\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        work: newWork,\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.work));\n                    }\n                );\n                break;\n\n            default:\n                throw new Error(\n                    `Unexpected section name '${sectionName}' was passed.` +\n                        \"Only valid names are 'work' and 'education'.\"\n                );\n        }\n    }\n\n    // Callback used in 'handleChange()' in NewInputs.jsx + CustomEditor.jsx\n    handleFieldChange(sectionName, name, value) {\n        switch (sectionName) {\n            case 'personal':\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        personal: [\n                            {\n                                ...prevState.personal[0],\n                                [name]: value,\n                            },\n                        ],\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.personal));\n                    }\n                );\n                break;\n\n            case 'education':\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        education: prevState.education.map((state) => {\n                            const matchingName = objectHasProperty(state, name);\n                            return matchingName ? { ...state, [name]: value } : state;\n                        }),\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.education));\n                    }\n                );\n                break;\n\n            case 'work':\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        work: prevState.work.map((state) => {\n                            const matchingName = objectHasProperty(state, name);\n                            return matchingName ? { ...state, [name]: value } : state;\n                        }),\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.work));\n                    }\n                );\n                break;\n\n            default:\n                throw new Error(\n                    `Unexpected section name '${sectionName}' was passed.` +\n                        \"Only valid names are 'personal', 'work' and 'education'.\"\n                );\n        }\n    }\n\n    resetForm(event) {\n        event.preventDefault();\n\n        if (window.confirm('Are you sure you want to reset the form?')) {\n            localStorage.clear();\n\n            const { isSubmitted, personal, education, work } = this.template;\n\n            this.setState({\n                isSubmitted: isSubmitted,\n                isReset: true,\n                personal: [...personal],\n                education: [...education],\n                work: [...work],\n            });\n        }\n    }\n\n    updateResetFlag() {\n        this.setState({\n            isReset: false,\n        });\n    }\n\n    submitForm() {\n        this.setState({\n            isSubmitted: !this.state.isSubmitted,\n        });\n    }\n\n    render() {\n        const { isSubmitted, personal } = this.state;\n        const userName = `${personal[0].firstName}${personal[0].lastName}CV.pdf`;\n\n        let UserPDF = null;\n        if (this.state.isSubmitted) {\n            UserPDF = <PDF data={this.state} />;\n        }\n\n        return (\n            <>\n                <Header />\n                <main>\n                    {!isSubmitted && (\n                        <Form\n                            onSubmit={this.submitForm}\n                            onChange={this.handleFieldChange}\n                            addNewInput={this.addNewInput}\n                            removeNewInput={this.removeNewInput}\n                            resetForm={this.resetForm}\n                            isReset={this.state.isReset}\n                            updateResetFlag={this.updateResetFlag}\n                            storedInputs={this.state}\n                        />\n                    )}\n                    {isSubmitted && (\n                        <>\n                            <PDFViewer width={'80%'} height={'800'}>\n                                {UserPDF}\n                            </PDFViewer>\n                            <PageOptions\n                                document={UserPDF}\n                                fileName={userName}\n                                onClick={this.submitForm}\n                            />\n                        </>\n                    )}\n                </main>\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './root/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}