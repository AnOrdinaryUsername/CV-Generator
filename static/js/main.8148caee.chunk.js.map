{"version":3,"sources":["reportWebVitals.js","shared/Button/PrintButton.jsx","features/form/components/CustomEditor.jsx","features/form/components/Inputs.jsx","features/form/components/NewInputs.jsx","features/form/components/FormFieldset.jsx","features/form/components/FormLayout.jsx","features/form/screens/Form.jsx","features/navbar/components/ColorThemeButton.jsx","features/navbar/screens/Header.jsx","root/App.jsx","index.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PrintButton","className","onClick","window","print","icon","faPrint","CustomEditor","props","state","editorHtml","initialValue","theme","handleChange","bind","html","this","setState","console","log","onChange","value","modules","formats","bounds","id","placeholder","Component","toolbar","list","clipboard","matchVisual","Input","animation","isRequired","label","name","type","inputProps","pattern","Error","input","autoComplete","required","htmlFor","NewInfoButton","faPlus","Inputs","isPresent","deleteNewInfo","inputs","enableAnimation","includeDelete","map","element","index","row","key","uniqid","FormFieldset","info","addNewInfo","event","preventDefault","NewInputs","newInfo","legend","title","description","isPersonalFieldset","length","FormLayout","children","Form","formSection","fieldsetData","ColorThemeButton","themeState","clickHandler","aria-label","faSun","faMoon","root","document","documentElement","detectColorTheme","storedTheme","localStorage","getItem","mediaQuery","matchMedia","setAttribute","matches","Header","isLightTheme","changeTheme","setItem","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8148caee.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { faPrint } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport './PrintButton.css';\n\nconst PrintButton = () => {\n    const printPage = () => window.print();\n\n    return (\n        <button className=\"button button--md print\" onClick={printPage}>\n            <FontAwesomeIcon icon={faPrint} />\n            Print page\n        </button>\n    );\n};\n\nexport default PrintButton;\n","import React, { Component } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport './CustomEditor.css';\n\nclass CustomEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { editorHtml: this.props.initialValue, theme: 'snow' };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(html) {\n        this.setState({ editorHtml: html }, () => console.log(this.state.editorHtml));\n    }\n\n    render() {\n        return (\n            <div className=\"text-editor\">\n                <ReactQuill\n                    theme={this.state.theme}\n                    onChange={this.handleChange}\n                    value={this.state.editorHtml}\n                    modules={CustomEditor.modules}\n                    formats={CustomEditor.formats}\n                    bounds={'.app'}\n                    id={this.props.id}\n                    placeholder={this.props.placeholder}\n                />\n            </div>\n        );\n    }\n}\n\n/*\n * Quill modules to attach to editor\n * See https://quilljs.com/docs/modules/ for complete options\n */\nCustomEditor.modules = {\n    toolbar: [['bold', 'italic', 'underline', 'strike'], [{ list: 'bullet' }], ['clean']],\n    clipboard: {\n        // toggle to add extra line breaks when pasting HTML:\n        matchVisual: false,\n    },\n};\n\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nCustomEditor.formats = ['bold', 'italic', 'underline', 'strike', 'list', 'bullet'];\n\nexport default CustomEditor;\n","import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport '../../../shared/Button/PrintButton.css';\nimport CustomEditor from '../components/CustomEditor';\nimport './Inputs.css';\n\n// isRequired, onChange, type\nconst Input = ({\n    animation,\n    id,\n    initialValue = '',\n    isRequired,\n    label,\n    name,\n    onChange,\n    placeholder,\n    type,\n    value,\n}) => {\n    const inputProps = {};\n\n    switch (type) {\n        case 'text':\n            // Allows all language characters.\n            inputProps.pattern = '^\\\\p{L}*$';\n            inputProps.type = 'text';\n            break;\n        case 'email':\n            inputProps.type = 'email';\n            break;\n        case 'tel':\n            inputProps.type = 'tel';\n            break;\n        // Custom Editor from react-quill\n        case 'editor':\n            break;\n        default:\n            throw new Error('Unknown input type passed to <Input />.');\n    }\n\n    let input = null;\n    if (type === 'editor') {\n        input = <CustomEditor id={id} initialValue={initialValue} placeholder={placeholder} />;\n    } else {\n        input = (\n            <input\n                autoComplete=\"on\"\n                id={id}\n                name={name} // Used for setting values in state\n                placeholder={placeholder}\n                required={isRequired}\n                value={value} // Value in text\n                {...inputProps}\n                onChange={onChange}\n            />\n        );\n    }\n\n    return (\n        <div className={`input ${animation}`}>\n            <label htmlFor={id}>{label}</label>\n            {input}\n        </div>\n    );\n};\n\nconst NewInfoButton = ({ onClick }) => {\n    return (\n        <button className=\"button button--md new-info\" onClick={onClick}>\n            <FontAwesomeIcon icon={faPlus} />\n            Add more information\n        </button>\n    );\n};\n\nexport { Input, NewInfoButton };\n","import React, { Component } from 'react';\nimport uniqid from 'uniqid';\nimport '../../../shared/Button/PrintButton.css';\nimport { Input } from '../components/Inputs';\nimport './FormFieldset.css';\n\nclass Inputs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isPresent: true,\n        };\n\n        this.deleteNewInfo = this.deleteNewInfo.bind(this);\n    }\n\n    deleteNewInfo() {\n        this.setState({\n            isPresent: !this.state.isPresent,\n        });\n    }\n\n    render() {\n        const { inputs, enableAnimation, includeDelete } = this.props;\n        const { isPresent } = this.state;\n\n        return (\n            <>\n                {isPresent && (\n                    <div className=\"new-inputs\">\n                        {inputs.map((element, index) => {\n                            // Show animation only when adding new inputs.\n                            const animation = enableAnimation ? `text-anim-${index + 1}` : ``;\n\n                            if (element.row) {\n                                return (\n                                    <div className={`row ${animation}`} key={uniqid()}>\n                                        {element.row.map((element) => {\n                                            return <Input {...element} key={uniqid()} />;\n                                        })}\n                                    </div>\n                                );\n                            }\n\n                            return <Input animation={animation} {...element} key={uniqid()} />;\n                        })}\n                        {includeDelete && (\n                            <button\n                                className=\"button button--sm delete\"\n                                onClick={this.deleteNewInfo}\n                            >\n                                Delete\n                            </button>\n                        )}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default Inputs;\n","import React, { Component } from 'react';\nimport { NewInfoButton } from '../components/Inputs';\nimport './FormFieldset.css';\nimport NewInputs from './NewInputs';\n\nclass FormFieldset extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            info: [],\n        };\n\n        this.addNewInfo = this.addNewInfo.bind(this);\n    }\n\n    addNewInfo(event) {\n        event.preventDefault();\n\n        const inputs = (\n            <NewInputs inputs={this.props.inputs} enableAnimation={true} includeDelete={true} />\n        );\n        const newInfo = [...this.state.info, inputs];\n        this.setState({\n            info: newInfo,\n        });\n    }\n\n    render() {\n        const { title, description } = this.props.legend;\n        // Don't show <NewInfoButton /> on 'Personal Information' fieldset since they're is no\n        // reason to add more personal info.\n        const isPersonalFieldset = title === 'Personal Information';\n\n        // Initial inputs.\n        const inputs = (\n            <NewInputs inputs={this.props.inputs} enableAnimation={false} includeDelete={false} />\n        );\n        const { info } = this.state;\n\n        return (\n            <fieldset>\n                <legend className=\"legend\">\n                    <h2>{title}</h2>\n                    <p>{description}</p>\n                </legend>\n                <div className=\"input-container\">\n                    {inputs}\n                    {info.length !== 0 && info.map((element) => element)}\n                    {!isPersonalFieldset && <NewInfoButton onClick={this.addNewInfo} />}\n                </div>\n            </fieldset>\n        );\n    }\n}\n\nexport default FormFieldset;\n","import React from 'react';\nimport './FormLayout.css';\n\nconst FormLayout = ({ children }) => {\n    return (\n        <section className=\"form-container\">\n            <form className=\"form form--round\">{children}</form>\n        </section>\n    );\n};\n\nexport default FormLayout;\n","import React, { Component } from 'react';\nimport uniqid from 'uniqid';\nimport PrintButton from '../../../shared/Button/PrintButton';\nimport FormFieldset from '../components/FormFieldset';\nimport FormLayout from '../components/FormLayout';\nimport './Form.css';\n\nclass Form extends Component {\n    constructor() {\n        super();\n\n        this.formSection = [\n            {\n                legend: {\n                    title: 'Personal Information',\n                    description:\n                        'Share your contact information so companies know how to reach you.',\n                },\n                inputs: [\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'First Name',\n                                id: 'first-name',\n                                isRequired: true,\n                                name: 'firstName',\n                                placeholder: 'e.g. Biggy',\n                            },\n                            {\n                                type: 'text',\n                                label: 'Last Name',\n                                id: 'last-name',\n                                isRequired: true,\n                                name: 'lastName',\n                                placeholder: 'e.g. Enterprise',\n                            },\n                        ],\n                    },\n                    {\n                        row: [\n                            {\n                                type: 'email',\n                                label: 'Email address',\n                                id: 'email',\n                                isRequired: true,\n                                name: 'email',\n                                placeholder: 'e.g. enterprise6@email.com',\n                            },\n                            {\n                                type: 'tel',\n                                label: 'Phone Number',\n                                id: 'phone-number',\n                                isRequired: true,\n                                name: 'phoneNumber',\n                                placeholder: 'e.g. (123) 456-7890',\n                            },\n                        ],\n                    },\n                    {\n                        type: 'text',\n                        label: 'Residence',\n                        id: 'residence',\n                        isRequired: true,\n                        name: 'residence',\n                        placeholder: 'e.g. Newport News, US',\n                    },\n                ],\n            },\n            {\n                legend: {\n                    title: 'Education History',\n                    description:\n                        'Having a degree shows an ability to learn. Although not required, you may include it if you wish to share.',\n                },\n                inputs: [\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'School Name',\n                                id: 'school-name',\n                                isRequired: false,\n                                name: 'schoolName',\n                                placeholder: 'e.g. Harvard University',\n                            },\n                            {\n                                type: 'text',\n                                label: 'Field of Study',\n                                id: 'field-of-study',\n                                isRequired: false,\n                                name: 'fieldOfStudy',\n                                placeholder: 'e.g. Computer Science, B.S.',\n                            },\n                        ],\n                    },\n                    {\n                        type: 'text',\n                        label: 'Date',\n                        id: 'date',\n                        isRequired: false,\n                        name: 'date',\n                        placeholder: 'e.g. 05/12/1938-02/17/1947',\n                    },\n                    {\n                        type: 'editor',\n                        label: 'Details',\n                        id: 'education-details',\n                        initialValue:\n                            '<ul><li><strong>Current GPA</strong>: 4.0</li><li><strong>Projects</strong>: Facebook clone, Battleship</li></ul>',\n                        placeholder:\n                            'List all descriptions of important academic achievements in bullet points.',\n                    },\n                ],\n            },\n            {\n                legend: {\n                    title: 'Work Experience',\n                    description:\n                        'Employers love practical experience. List all relevant work stuff.',\n                },\n                inputs: [\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'Company Name',\n                                id: 'company-name',\n                                isRequired: false,\n                                name: 'companyName',\n                                placeholder: 'e.g. US Navy',\n                            },\n                            {\n                                type: 'text',\n                                label: 'Job Title',\n                                id: 'job-title',\n                                isRequired: false,\n                                name: 'jobTitle',\n                                placeholder: 'e.g. Aircraft Carrier',\n                            },\n                        ],\n                    },\n                    {\n                        type: 'text',\n                        label: 'Date',\n                        id: 'date',\n                        isRequired: false,\n                        name: 'date',\n                        placeholder: 'e.g. 05/12/1938-02/17/1947',\n                    },\n                    {\n                        type: 'editor',\n                        label: 'Details',\n                        id: 'work-details',\n                        initialValue:\n                            '<ul><li>Coordinated movement of air wings at the Battle of Midway.</li></ul>',\n                        placeholder:\n                            'List all descriptions of applied skills and roles in bullet points.',\n                    },\n                ],\n            },\n        ];\n\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <FormLayout>\n                {this.formSection.map((fieldsetData) => {\n                    return <FormFieldset {...fieldsetData} key={uniqid()} />;\n                })}\n                <PrintButton />\n            </FormLayout>\n        );\n    }\n}\n\nexport default Form;\n","import { faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nconst ColorThemeButton = ({ themeState, clickHandler }) => {\n    return (\n        <button\n            aria-label={themeState ? 'Activate dark theme' : 'Activate light theme'}\n            onClick={clickHandler}\n        >\n            <FontAwesomeIcon icon={themeState ? faSun : faMoon} />\n        </button>\n    );\n};\n\nexport default ColorThemeButton;\n","import React, { Component } from 'react';\nimport ColorThemeButton from '../components/ColorThemeButton';\n\nconst root = document.documentElement;\n\nconst detectColorTheme = (() => {\n    // Initial color theme.\n    let theme = 'light';\n    const storedTheme = localStorage.getItem('theme');\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n    if (storedTheme) {\n        root.setAttribute('data-theme', 'light');\n        if (storedTheme === 'dark') {\n            theme = 'dark';\n        }\n    } else if (mediaQuery.matches) {\n        theme = 'dark';\n    }\n\n    if (theme === 'dark') {\n        root.setAttribute('data-theme', 'dark');\n        return false;\n    }\n\n    root.setAttribute('data-theme', 'light');\n    return true;\n})();\n\nclass Header extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            isLightTheme: detectColorTheme,\n        };\n\n        this.changeTheme = this.changeTheme.bind(this);\n    }\n\n    changeTheme() {\n        this.setState(\n            {\n                isLightTheme: !this.state.isLightTheme,\n            },\n            () => {\n                const theme = this.state.isLightTheme ? 'light' : 'dark';\n                root.setAttribute('data-theme', theme);\n                localStorage.setItem('theme', theme);\n            }\n        );\n    }\n\n    render() {\n        const { isLightTheme } = this.state;\n\n        return (\n            <header>\n                <ColorThemeButton themeState={isLightTheme} clickHandler={this.changeTheme} />\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","import Form from '../features/form/screens/Form';\nimport Header from '../features/navbar/screens/Header';\n\nfunction App() {\n    return (\n        <>\n            <Header />\n            <main>\n                <Form />\n            </main>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './root/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}