{"version":3,"sources":["reportWebVitals.js","shared/Buttons/Buttons.jsx","features/form/components/CustomEditor.jsx","features/form/components/Inputs.jsx","features/form/components/NewInputs.jsx","features/form/components/FormFieldset.jsx","features/form/components/FormLayout.jsx","features/form/screens/Form.jsx","features/navbar/components/ColorThemeButton.jsx","features/navbar/screens/Header.jsx","features/pdf/components/PersonalInfo.jsx","features/pdf/components/CV.jsx","features/pdf/components/fonts/CormorantGaramond-Bold.ttf","features/pdf/components/fonts/CormorantGaramond-Regular.ttf","features/pdf/components/fonts/DejaVu-Sans.Book.ttf","features/pdf/screens/PDF.jsx","root/App.jsx","index.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SubmitButton","className","CustomEditor","props","state","theme","handleEditorChange","bind","html","this","onChange","name","sectionName","value","modules","formats","bounds","id","placeholder","Component","toolbar","list","clipboard","matchVisual","Input","animation","autoComplete","index","isRequired","label","type","inputProps","pattern","Error","input","identifier","undefined","required","htmlFor","NewInfoButton","onClick","icon","faPlus","NewInputs","confirmDeletion","handleInputChange","event","preventDefault","window","confirm","removeInputs","target","inputs","enableAnimation","includeDelete","isPresent","map","element","rowStyle","singleStyle","isEditor","row","storedInputs","FormFieldset","info","addNewInfo","updateNewInfoCount","newInputs","length","propsState","JSON","parse","stringify","shift","forEach","additionalInputs","push","setState","addNewInput","updatedInfo","NEW_INPUT_START","filter","component","removeNewInput","legend","title","description","isPersonalFieldset","initialInfo","newInfo","indice","start","FormLayout","children","onSubmit","Form","formSection","data","personal","education","work","fieldsetData","key","ColorThemeButton","themeState","clickHandler","aria-label","faSun","faMoon","root","document","documentElement","detectColorTheme","storedTheme","localStorage","getItem","mediaQuery","matchMedia","setAttribute","matches","Header","isLightTheme","setItem","changeTheme","styles","StyleSheet","create","section","alignItems","borderBottom","display","flexDirection","paddingBottom","justifyContent","fontSize","fontWeight","lineHeight","details","specialCharacter","fontFamily","marginLeft","marginRight","PersonalInfo","userInfo","lastName","firstName","email","phoneNumber","residence","blackDiamond","String","fromCharCode","style","page","backgroundColor","padding","width","CV","userData","Font","register","family","format","src","unicodeChar","cormorantBold","cormorantReg","PDF","userName","author","subject","repeat","objectHasProperty","object","prop","propertyIsEnumerable","call","App","template","isSubmitted","schoolName","fieldOfStudy","location","date","editor","companyName","jobTitle","checkStorage","storageItem","item","submitForm","resetForm","handleFieldChange","prevState","copyValues","original","valueObject","objectToCopyValueTo","Object","entries","objectToCopyFrom","values","reduce","accum","k","v","newEducation","i","copiedObject","pop","newWork","clear","UserPDF","height","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aee25811.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { faDownload, faPrint } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport './Buttons.css';\n\nconst PrintButton = () => {\n    const printPage = () => window.print();\n\n    return (\n        <button className=\"button button--md print\" onClick={printPage}>\n            <FontAwesomeIcon icon={faPrint} />\n            Print page\n        </button>\n    );\n};\n\nconst DownloadButton = ({ firstName, lastName }) => {\n    return (\n        <button className=\"button button--md download\">\n            <FontAwesomeIcon icon={faDownload} />\n            Download as PDF\n        </button>\n    );\n};\n\nconst SubmitButton = () => {\n    return <button className=\"button submit\">Submit</button>;\n};\n\nexport { PrintButton, DownloadButton, SubmitButton };\n","import React, { Component } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport './CustomEditor.css';\n\nclass CustomEditor extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            theme: 'snow',\n        };\n\n        this.handleEditorChange = this.handleEditorChange.bind(this);\n    }\n\n    handleEditorChange(html) {\n        const { onChange, name, sectionName } = this.props;\n\n        onChange(sectionName, name, html);\n    }\n\n    render() {\n        return (\n            <div className=\"text-editor\">\n                <ReactQuill\n                    theme={this.state.theme}\n                    onChange={this.handleEditorChange}\n                    value={this.props.value}\n                    modules={CustomEditor.modules}\n                    formats={CustomEditor.formats}\n                    bounds={'.text-editor'}\n                    id={this.props.id}\n                    placeholder={this.props.placeholder}\n                />\n            </div>\n        );\n    }\n}\n\n/*\n * Quill modules to attach to editor\n * See https://quilljs.com/docs/modules/ for complete options\n */\nCustomEditor.modules = {\n    toolbar: [['bold', 'italic', 'underline', 'strike'], [{ list: 'bullet' }], ['clean']],\n    clipboard: {\n        // toggle to add extra line breaks when pasting HTML:\n        matchVisual: false,\n    },\n};\n\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nCustomEditor.formats = ['bold', 'italic', 'underline', 'strike', 'list', 'bullet'];\n\nexport default CustomEditor;\n","import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport '../../../shared/Buttons/Buttons.css';\nimport CustomEditor from '../components/CustomEditor';\nimport './Inputs.css';\n\nconst Input = ({\n    animation,\n    autoComplete,\n    index,\n    isRequired,\n    label,\n    name,\n    onChange,\n    placeholder,\n    sectionName,\n    type,\n    value,\n}) => {\n    const inputProps = {};\n\n    switch (type) {\n        case 'text':\n            // Allows all language characters. \\w allows whitespace\n            inputProps.pattern = '^[\\\\p{L}\\\\p{M}, ]*$';\n            inputProps.type = 'text';\n            break;\n        case 'email':\n            inputProps.type = 'email';\n            break;\n        case 'tel':\n            inputProps.type = 'tel';\n            break;\n        // Custom Editor from react-quill\n        case 'editor':\n            break;\n        default:\n            throw new Error(`Unknown input type ${type} passed to <Input />.`);\n    }\n\n    let input = null;\n    let identifier = index !== undefined ? `${name}${index}` : name;\n\n    if (type === 'editor') {\n        input = (\n            <CustomEditor\n                id={identifier}\n                onChange={onChange}\n                value={value[identifier]}\n                name={identifier}\n                placeholder={placeholder}\n                sectionName={sectionName}\n            />\n        );\n    } else {\n        input = (\n            <input\n                autoComplete={autoComplete || 'off'}\n                id={identifier}\n                name={identifier} // Used for setting values in state\n                placeholder={placeholder}\n                required={isRequired}\n                value={value[identifier]} // Value in text\n                {...inputProps}\n                onChange={onChange}\n            />\n        );\n    }\n\n    return (\n        <div className={animation ? `input ${animation}` : 'input'}>\n            <label htmlFor={identifier}>{label}</label>\n            {input}\n        </div>\n    );\n};\n\nconst NewInfoButton = ({ onClick }) => {\n    return (\n        <button className=\"button button--md new-info\" onClick={onClick}>\n            <FontAwesomeIcon icon={faPlus} />\n            Add more information\n        </button>\n    );\n};\n\nexport { Input, NewInfoButton };\n","import React, { Component } from 'react';\nimport '../../../shared/Buttons/Buttons.css';\nimport { Input } from '../components/Inputs';\nimport './FormFieldset.css';\n\nclass NewInputs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.confirmDeletion = this.confirmDeletion.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    confirmDeletion(event) {\n        event.preventDefault();\n\n        if (window.confirm('Are you sure you want to delete this item?')) {\n            const { index } = this.props;\n            this.props.removeInputs(index);\n        }\n    }\n\n    handleInputChange(event) {\n        const { name, value } = event.target;\n        this.props.onChange(this.props.sectionName, name, value);\n    }\n\n    render() {\n        const { inputs, enableAnimation, includeDelete, onChange, isPresent } = this.props;\n\n        return (\n            <>\n                {isPresent && (\n                    <div className=\"new-inputs\">\n                        {inputs.map((element, index) => {\n                            // Show animation only when adding new inputs.\n                            const rowStyle = enableAnimation ? `row text-anim-${index + 1}` : 'row';\n                            const singleStyle = enableAnimation ? `text-anim-${index + 1}` : null;\n                            const isEditor = element.type === 'editor';\n\n                            if (element.row) {\n                                return (\n                                    <div className={rowStyle}>\n                                        {element.row.map((props) => {\n                                            return (\n                                                <Input\n                                                    {...props}\n                                                    value={this.props.storedInputs}\n                                                    index={this.props.index}\n                                                    onChange={\n                                                        isEditor ? onChange : this.handleInputChange\n                                                    }\n                                                />\n                                            );\n                                        })}\n                                    </div>\n                                );\n                            }\n\n                            return (\n                                <Input\n                                    animation={singleStyle}\n                                    value={this.props.storedInputs}\n                                    index={this.props.index}\n                                    // For CustomEditor\n                                    sectionName={this.props.sectionName}\n                                    {...element}\n                                    onChange={isEditor ? onChange : this.handleInputChange}\n                                />\n                            );\n                        })}\n                        {includeDelete && (\n                            <button\n                                className=\"button button--sm delete text-anim-4\"\n                                onClick={this.confirmDeletion}\n                            >\n                                Delete\n                            </button>\n                        )}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default NewInputs;\n","import React, { Component } from 'react';\nimport { NewInfoButton } from '../components/Inputs';\nimport './FormFieldset.css';\nimport NewInputs from './NewInputs';\n\nclass FormFieldset extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            info: [],\n        };\n\n        this.addNewInfo = this.addNewInfo.bind(this);\n        this.updateNewInfoCount = this.updateNewInfoCount.bind(this);\n    }\n\n    // Could've been done in the constructor but there's a lot of code.\n    componentDidMount() {\n        let newInputs = [];\n        const { storedInputs } = this.props;\n        const INITIAL_INPUT_LENGTH = 1;\n\n        if (storedInputs.length > INITIAL_INPUT_LENGTH) {\n            // Deep clone so we don't delete the first element in passed state.\n            const propsState = JSON.parse(JSON.stringify(storedInputs));\n            // No need to have initial values in. Only new inputs.\n            propsState.shift();\n\n            const { inputs, onChange, sectionName } = this.props;\n\n            propsState.forEach(() => {\n                const additionalInputs = {\n                    inputs: inputs,\n                    sectionName: sectionName,\n                    isPresent: true,\n                    removeInputs: this.updateNewInfoCount,\n                    enableAnimation: true,\n                    includeDelete: true,\n                    onChange: onChange,\n                };\n\n                newInputs.push(additionalInputs);\n            });\n\n            this.setState({\n                info: [...newInputs],\n            });\n        }\n    }\n\n    addNewInfo(event) {\n        event.preventDefault();\n\n        const newInputs = this.props.inputs;\n        const { sectionName, onChange } = this.props;\n\n        const inputs = {\n            inputs: newInputs,\n            sectionName: sectionName,\n            isPresent: true,\n            removeInputs: this.updateNewInfoCount,\n            enableAnimation: true,\n            includeDelete: true,\n            onChange: onChange,\n        };\n\n        this.props.addNewInput(sectionName, this.state.info.length);\n\n        this.setState({\n            info: [...this.state.info, inputs],\n        });\n    }\n\n    updateNewInfoCount(index) {\n        const updatedInfo = [...this.state.info];\n        const NEW_INPUT_START = index + 1;\n        updatedInfo[index].isPresent = !updatedInfo[index].isPresent;\n\n        this.setState(\n            {\n                info: updatedInfo.filter((component) => component.isPresent),\n            },\n            () => {\n                const { removeNewInput, sectionName } = this.props;\n                removeNewInput(sectionName, NEW_INPUT_START);\n            }\n        );\n    }\n\n    render() {\n        const { title, description } = this.props.legend;\n        // Don't show <NewInfoButton /> on 'Personal Information' fieldset since they're is no\n        // reason to add more personal info.\n        const isPersonalFieldset = title === 'Personal Information';\n\n        const initialInfo = (\n            <NewInputs\n                inputs={this.props.inputs}\n                // Passed state\n                storedInputs={this.props.storedInputs[0]} // array and use index to access storedInputs\n                sectionName={this.props.sectionName}\n                isPresent={true}\n                enableAnimation={false}\n                includeDelete={false}\n                onChange={this.props.onChange}\n            />\n        );\n\n        const { info } = this.state;\n        let newInfo = null;\n\n        if (info.length !== 0) {\n            newInfo = info.map((props, indice) => {\n                // index is used as an identifier for newly add inputs\n                // storedInputs begin at 1 since initialInfo (name with no identifier) begins at 0\n                const NEW_INFO_START = 1;\n                const start = indice + NEW_INFO_START;\n                return (\n                    <NewInputs\n                        {...props}\n                        // Assign an index to each input's name attribute for differentiation.\n                        // Ex. name = 'schoolName0' for a newly added info input\n                        index={indice}\n                        storedInputs={this.props.storedInputs[start]}\n                    />\n                );\n            });\n        }\n\n        return (\n            <fieldset>\n                <legend className=\"legend\">\n                    <h2>{title}</h2>\n                    <p>{description}</p>\n                </legend>\n                <div className=\"input-container\">\n                    {initialInfo}\n                    {newInfo}\n                    {!isPersonalFieldset && <NewInfoButton onClick={this.addNewInfo} />}\n                </div>\n            </fieldset>\n        );\n    }\n}\n\nexport default FormFieldset;\n","import React from 'react';\nimport './FormLayout.css';\n\nconst FormLayout = ({ children, onSubmit }) => {\n    return (\n        <section className=\"form-container\">\n            <form className=\"form form--round\" onSubmit={onSubmit}>\n                {children}\n            </form>\n        </section>\n    );\n};\n\nexport default FormLayout;\n","import React, { Component } from 'react';\nimport { SubmitButton } from '../../../shared/Buttons/Buttons';\nimport FormFieldset from '../components/FormFieldset';\nimport FormLayout from '../components/FormLayout';\nimport './Form.css';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n\n        // Template for inputs.\n        this.formSection = [\n            {\n                legend: {\n                    title: 'Personal Information',\n                    description:\n                        'Share your contact information so companies know how to reach you.',\n                },\n                inputs: [\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'First Name',\n                                isRequired: true,\n                                name: 'firstName',\n                                placeholder: 'e.g. Biggy',\n                                autoComplete: 'given-name',\n                            },\n                            {\n                                type: 'text',\n                                label: 'Last Name',\n                                isRequired: true,\n                                name: 'lastName',\n                                placeholder: 'e.g. Enterprise',\n                                autoComplete: 'family-name',\n                            },\n                        ],\n                    },\n                    {\n                        row: [\n                            {\n                                type: 'email',\n                                label: 'Email address',\n                                isRequired: true,\n                                name: 'email',\n                                placeholder: 'e.g. enterprise6@email.com',\n                                autoComplete: 'email',\n                            },\n                            {\n                                type: 'tel',\n                                label: 'Phone Number',\n                                isRequired: true,\n                                name: 'phoneNumber',\n                                placeholder: 'e.g. (123) 456-7890',\n                                autoComplete: 'tel',\n                            },\n                        ],\n                    },\n                    {\n                        type: 'text',\n                        label: 'Residence',\n                        isRequired: true,\n                        name: 'residence',\n                        placeholder: 'e.g. Newport News, US',\n                        autoComplete: 'country-name',\n                    },\n                ],\n            },\n            {\n                legend: {\n                    title: 'Education History',\n                    description:\n                        'Having a degree demonstrates an ability to learn. Although not required, you may include it if you wish to share.',\n                },\n                inputs: [\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'School Name',\n                                isRequired: false,\n                                name: 'schoolName',\n                                placeholder: 'e.g. Harvard University',\n                            },\n                            {\n                                type: 'text',\n                                label: 'Field of Study',\n                                isRequired: false,\n                                name: 'fieldOfStudy',\n                                placeholder: 'e.g. Computer Science, B.S.',\n                            },\n                        ],\n                    },\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'Location',\n                                isRequired: false,\n                                name: 'location',\n                                placeholder: 'e.g. Oahu, HI',\n                            },\n                            {\n                                type: 'text',\n                                label: 'Date',\n                                isRequired: false,\n                                name: 'date',\n                                placeholder: 'e.g. May 1938 - Feb. 1947',\n                            },\n                        ],\n                    },\n                    {\n                        type: 'editor',\n                        label: 'Details',\n                        name: 'editor',\n                        placeholder:\n                            'List all descriptions of important academic achievements in bullet points.',\n                    },\n                ],\n            },\n            {\n                legend: {\n                    title: 'Work Experience',\n                    description:\n                        'Employers love practical experience. Show them what skills you bring to the table.',\n                },\n                inputs: [\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'Company Name',\n                                isRequired: false,\n                                name: 'companyName',\n                                placeholder: 'e.g. US Navy',\n                            },\n                            {\n                                type: 'text',\n                                label: 'Job Title',\n                                isRequired: false,\n                                name: 'jobTitle',\n                                placeholder: 'e.g. Aircraft Carrier',\n                            },\n                        ],\n                    },\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'Location',\n                                isRequired: false,\n                                name: 'location',\n                                placeholder: 'e.g. Oahu, HI',\n                            },\n                            {\n                                type: 'text',\n                                label: 'Date',\n                                isRequired: false,\n                                name: 'date',\n                                placeholder: 'e.g. May 1938 - Feb. 1947',\n                            },\n                        ],\n                    },\n                    {\n                        type: 'editor',\n                        label: 'Details',\n                        name: 'editor',\n                        placeholder:\n                            'List all descriptions of applied skills and roles in bullet points.',\n                    },\n                ],\n            },\n        ];\n    }\n\n    render() {\n        // Passed App state.\n        const { personal, education, work } = this.props.storedInputs;\n        // Arrays with object data\n        const data = [personal, education, work];\n        const sectionName = ['personal', 'education', 'work'];\n\n        return (\n            <FormLayout onSubmit={this.props.onSubmit}>\n                {this.formSection.map((fieldsetData, index) => {\n                    return (\n                        <FormFieldset\n                            {...fieldsetData}\n                            storedInputs={data[index]}\n                            sectionName={sectionName[index]}\n                            onChange={this.props.onChange}\n                            addNewInput={this.props.addNewInput}\n                            removeNewInput={this.props.removeNewInput}\n                            key={index}\n                        />\n                    );\n                })}\n                <SubmitButton />\n            </FormLayout>\n        );\n    }\n}\n\nexport default Form;\n","import { faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nconst ColorThemeButton = ({ themeState, clickHandler }) => {\n    return (\n        <button\n            aria-label={themeState ? 'Activate dark theme' : 'Activate light theme'}\n            onClick={clickHandler}\n        >\n            <FontAwesomeIcon icon={themeState ? faSun : faMoon} />\n        </button>\n    );\n};\n\nexport default ColorThemeButton;\n","import React, { Component } from 'react';\nimport ColorThemeButton from '../components/ColorThemeButton';\n\nconst root = document.documentElement;\n\nconst detectColorTheme = (() => {\n    // Initial color theme.\n    let theme = 'light';\n    const storedTheme = localStorage.getItem('theme');\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n    if (storedTheme) {\n        root.setAttribute('data-theme', 'light');\n        if (storedTheme === 'dark') {\n            theme = 'dark';\n        }\n    } else if (mediaQuery.matches) {\n        theme = 'dark';\n    }\n\n    if (theme === 'dark') {\n        root.setAttribute('data-theme', 'dark');\n        return false;\n    }\n\n    root.setAttribute('data-theme', 'light');\n    return true;\n})();\n\nclass Header extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            isLightTheme: detectColorTheme,\n        };\n\n        if (this.state.isLightTheme) {\n            localStorage.setItem('theme', 'light');\n        } else {\n            localStorage.setItem('theme', 'dark');\n        }\n\n        this.changeTheme = this.changeTheme.bind(this);\n    }\n\n    changeTheme() {\n        this.setState(\n            {\n                isLightTheme: !this.state.isLightTheme,\n            },\n            () => {\n                const theme = this.state.isLightTheme ? 'light' : 'dark';\n                root.setAttribute('data-theme', theme);\n                localStorage.setItem('theme', theme);\n            }\n        );\n    }\n\n    render() {\n        const { isLightTheme } = this.state;\n\n        return (\n            <header>\n                <ColorThemeButton themeState={isLightTheme} clickHandler={this.changeTheme} />\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","import { StyleSheet, Text, View } from '@react-pdf/renderer';\nimport React from 'react';\n\nconst styles = StyleSheet.create({\n    section: {\n        alignItems: 'baseline',\n        borderBottom: '0.1 solid #000000',\n        display: 'flex',\n        flexDirection: 'column',\n        paddingBottom: 4,\n        justifyContent: 'flex-start',\n    },\n    name: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        lineHeight: 1.2,\n    },\n    details: {\n        alignItems: 'baseline',\n        display: 'flex',\n        flexDirection: 'row',\n        fontSize: 16,\n        fontWeight: 'light',\n        justifyContent: 'flex-start',\n    },\n    specialCharacter: {\n        fontFamily: 'DejaVu Sans',\n        marginLeft: 4,\n        marginRight: 4,\n    },\n});\n\nconst PersonalInfo = ({ userInfo }) => {\n    const { lastName, firstName, email, phoneNumber, residence } = userInfo;\n\n    // This unicode character \"❖\".\n    const blackDiamond = String.fromCharCode(0x2756);\n\n    return (\n        <View style={styles.section}>\n            <Text style={styles.name}>{`${firstName} ${lastName}`}</Text>\n            <View style={styles.details}>\n                <Text>{email}</Text>\n                <View style={styles.details}>\n                    <Text style={styles.specialCharacter}>{blackDiamond}</Text>\n                    <Text>{phoneNumber}</Text>\n                    <Text style={styles.specialCharacter}>{blackDiamond}</Text>\n                </View>\n                <Text>{residence}</Text>\n            </View>\n        </View>\n    );\n};\n\nexport default PersonalInfo;\n","import { Page, StyleSheet } from '@react-pdf/renderer';\nimport React from 'react';\nimport PersonalInfo from './PersonalInfo';\n\nconst styles = StyleSheet.create({\n    page: {\n        backgroundColor: '#FFFFFF',\n        display: 'flex',\n        justifyContent: 'flex-start',\n        padding: 36,\n        width: '100%',\n    },\n});\n\nconst CV = ({ userData }) => {\n    return (\n        <Page style={styles.page}>\n            <PersonalInfo userInfo={userData.personal[0]} />\n        </Page>\n    );\n};\n\nexport default CV;\n","export default __webpack_public_path__ + \"static/media/CormorantGaramond-Bold.9f7b94f2.ttf\";","export default __webpack_public_path__ + \"static/media/CormorantGaramond-Regular.e1f2c50e.ttf\";","export default __webpack_public_path__ + \"static/media/DejaVu-Sans.Book.3765b612.ttf\";","import { Document, Font } from '@react-pdf/renderer';\nimport React from 'react';\nimport CV from '../components/CV';\nimport cormorantBold from '../components/fonts/CormorantGaramond-Bold.ttf';\nimport cormorantReg from '../components/fonts/CormorantGaramond-Regular.ttf';\nimport unicodeChar from '../components/fonts/DejaVu-Sans.Book.ttf';\n\n// Just for this character \"❖\"\nFont.register({\n    family: 'DejaVu Sans',\n    format: 'TrueType',\n    src: unicodeChar,\n});\n\nFont.register({\n    family: 'Cormorant Garamond Bold',\n    format: 'TrueType',\n    src: cormorantBold,\n});\n\nFont.register({\n    family: 'Cormorant Garamond Regular',\n    format: 'TrueType',\n    src: cormorantReg,\n});\n\nconst PDF = ({ data }) => {\n    const { firstName, lastName } = data.personal[0];\n    const userName = `${firstName} ${lastName}`;\n\n    return (\n        {\n            /* \n            Basically just following this:\n            https://commonlook.com/the-relevance-of-metadata-in-accessible-pdfs/\n        */\n        },\n        (\n            <Document\n                author={`${userName}`}\n                subject={`Curriculum Vitae for ${userName}`}\n                title={`Curriculum Vitae for ${userName}`}\n            >\n                <CV userData={data} />\n            </Document>\n        )\n    );\n};\n\nexport default PDF;\n","import { PDFViewer } from '@react-pdf/renderer';\nimport React, { Component } from 'react';\nimport Form from '../features/form/screens/Form';\nimport Header from '../features/navbar/screens/Header';\nimport PDF from '../features/pdf/screens/PDF';\n\n// object => object literal\n// prop => string (the property inside the object literal)\n// return => boolean\nconst objectHasProperty = (object, prop) => ({}.propertyIsEnumerable.call(object, prop));\n\n// Just to assign multiple variables a single value easily.\nfunction* repeat(value) {\n    while (true) {\n        yield value;\n    }\n}\n\nclass App extends Component {\n    constructor() {\n        super();\n\n        const template = {\n            isSubmitted: false,\n            personal: [\n                {\n                    firstName: '',\n                    lastName: '',\n                    email: '',\n                    phoneNumber: '',\n                    residence: '',\n                },\n            ],\n            education: [\n                {\n                    schoolName: '',\n                    fieldOfStudy: '',\n                    location: '',\n                    date: '',\n                    editor:\n                        '<ul><li><strong>Current GPA</strong>: 4.0</li><li><strong>Projects</strong>: Facebook clone, Battleship</li></ul>',\n                },\n            ],\n            work: [\n                {\n                    companyName: '',\n                    jobTitle: '',\n                    location: '',\n                    date: '',\n                    editor:\n                        '<ul><li>Coordinated movement of air wings at the Battle of Midway.</li></ul>',\n                },\n            ],\n        };\n\n        let [storage, personal, education, work] = repeat(null);\n\n        storage = { ...localStorage };\n        // No need to store color theme in App state.\n        delete storage['theme'];\n\n        const checkStorage = (storageItem) => {\n            const item = localStorage.getItem(storageItem);\n\n            if (item) {\n                return JSON.parse(item);\n            }\n\n            return template[storageItem];\n        };\n\n        personal = checkStorage('personal');\n        education = checkStorage('education');\n        work = checkStorage('work');\n\n        this.state = {\n            isSubmitted: false,\n            personal: [...personal],\n            education: [...education],\n            work: [...work],\n        };\n\n        this.submitForm = this.submitForm.bind(this);\n        this.resetForm = this.resetForm.bind(this);\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.addNewInput = this.addNewInput.bind(this);\n        this.removeNewInput = this.removeNewInput.bind(this);\n    }\n\n    addNewInput(sectionName, index) {\n        switch (sectionName) {\n            case 'education': {\n                const schoolName = `schoolName${index}`;\n                const fieldOfStudy = `fieldOfStudy${index}`;\n                const location = `location${index}`;\n                const date = `date${index}`;\n                const editor = `editor${index}`;\n\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        education: [\n                            ...prevState.education,\n                            {\n                                [schoolName]: '',\n                                [fieldOfStudy]: '',\n                                [location]: '',\n                                [date]: '',\n                                [editor]:\n                                    '<ul><li><strong>Current GPA</strong>: 4.0</li><li><strong>Projects</strong>: Facebook clone, Battleship</li></ul>',\n                            },\n                        ],\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.education));\n                    }\n                );\n                break;\n            }\n            case 'work': {\n                const companyName = `companyName${index}`;\n                const jobTitle = `jobTitle${index}`;\n                const location = `location${index}`;\n                const date = `date${index}`;\n                const editor = `editor${index}`;\n\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        work: [\n                            ...prevState.work,\n                            {\n                                [companyName]: '',\n                                [jobTitle]: '',\n                                [location]: '',\n                                [date]: '',\n                                [editor]:\n                                    '<ul><li>Coordinated movement of air wings at the Battle of Midway.</li></ul>',\n                            },\n                        ],\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.work));\n                    }\n                );\n                break;\n            }\n            default:\n                throw new Error(\n                    `Unexpected section name '${sectionName}' was passed.` +\n                        \"Only valid names are 'work' and 'education'.\"\n                );\n        }\n    }\n\n    removeNewInput(sectionName, index) {\n        // original => The object to copy the values to\n        // valueObject => The object passing the values\n        // Note: Both objects have to be the same length.\n        const copyValues = (original, valueObject) => {\n            const objectToCopyValueTo = Object.entries(original);\n            const objectToCopyFrom = Object.values(valueObject);\n\n            objectToCopyValueTo.forEach((element, index) => {\n                const value = 1;\n                element[value] = objectToCopyFrom[index];\n            });\n\n            const copiedObject = objectToCopyValueTo.reduce((accum, [k, v]) => {\n                accum[k] = v;\n                return accum;\n            }, {});\n\n            return copiedObject;\n        };\n\n        switch (sectionName) {\n            case 'education':\n                const newEducation = [...this.state.education];\n\n                for (let i = index; i < newEducation.length; ++i) {\n                    const start = i + 1;\n\n                    if (start >= newEducation.length) {\n                        break;\n                    }\n\n                    const copiedObject = copyValues(newEducation[i], newEducation[start]);\n                    newEducation[i] = copiedObject;\n                }\n\n                /*  It's a pop operation since the order stays the same and\n                 *   we only need to remove the newest input.\n                 *\n                 *   This is due to the fact that the map() on the line 133 in FormFieldset.jsx\n                 *   passes an index to access App state.\n                 */\n                newEducation.pop();\n\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        education: newEducation,\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.education));\n                    }\n                );\n                break;\n\n            case 'work':\n                const newWork = [...this.state.work];\n\n                for (let i = index; i < newWork.length; ++i) {\n                    const start = i + 1;\n\n                    if (start >= newWork.length) {\n                        break;\n                    }\n\n                    const copiedObject = copyValues(newWork[i], newWork[start]);\n                    newWork[i] = copiedObject;\n                }\n\n                newWork.pop();\n\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        work: newWork,\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.work));\n                    }\n                );\n                break;\n\n            default:\n                throw new Error(\n                    `Unexpected section name '${sectionName}' was passed.` +\n                        \"Only valid names are 'work' and 'education'.\"\n                );\n        }\n    }\n\n    // Callback used in 'handleChange()' in NewInputs.jsx + CustomEditor.jsx\n    handleFieldChange(sectionName, name, value) {\n        switch (sectionName) {\n            case 'personal':\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        personal: [\n                            {\n                                ...prevState.personal[0],\n                                [name]: value,\n                            },\n                        ],\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.personal));\n                    }\n                );\n                break;\n\n            case 'education':\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        education: prevState.education.map((state) => {\n                            const matchingName = objectHasProperty(state, name);\n                            return matchingName ? { ...state, [name]: value } : state;\n                        }),\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.education));\n                    }\n                );\n                break;\n\n            case 'work':\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        work: prevState.work.map((state) => {\n                            const matchingName = objectHasProperty(state, name);\n                            return matchingName ? { ...state, [name]: value } : state;\n                        }),\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.work));\n                    }\n                );\n                break;\n\n            default:\n                throw new Error(\n                    `Unexpected section name '${sectionName}' was passed.` +\n                        \"Only valid names are 'personal', 'work' and 'education'.\"\n                );\n        }\n    }\n\n    resetForm(event) {\n        event.preventDefault();\n\n        if (window.confirm('Are you sure you want to clear the form?')) {\n            localStorage.clear();\n\n            this.setState({\n                isSubmitted: false,\n                personal: [\n                    {\n                        firstName: '',\n                        lastName: '',\n                        email: '',\n                        phoneNumber: '',\n                        residence: '',\n                    },\n                ],\n                education: [\n                    {\n                        schoolName: '',\n                        fieldOfStudy: '',\n                        location: '',\n                        date: '',\n                        editor:\n                            '<ul><li><strong>Current GPA</strong>: 4.0</li><li><strong>Projects</strong>: Facebook clone, Battleship</li></ul>',\n                    },\n                ],\n                work: [\n                    {\n                        companyName: '',\n                        jobTitle: '',\n                        location: '',\n                        date: '',\n                        editor:\n                            '<ul><li>Coordinated movement of air wings at the Battle of Midway.</li></ul>',\n                    },\n                ],\n            });\n        }\n    }\n\n    submitForm() {\n        this.setState({\n            isSubmitted: !this.state.isSubmitted,\n        });\n    }\n\n    render() {\n        const { isSubmitted, personal } = this.state;\n        const userName = `${personal[0].firstName}${personal[0].lastName}CV`;\n\n        let UserPDF = null;\n        if (this.state.isSubmitted) {\n            UserPDF = <PDF data={this.state} />;\n        }\n\n        return (\n            <>\n                <Header />\n                <main>\n                    {!isSubmitted && (\n                        <Form\n                            onSubmit={this.submitForm}\n                            onChange={this.handleFieldChange}\n                            addNewInput={this.addNewInput}\n                            removeNewInput={this.removeNewInput}\n                            resetForm={this.resetForm}\n                            storedInputs={this.state}\n                        />\n                    )}\n                    {isSubmitted && (\n                        <>\n                            <PDFViewer width={'80%'} height={'100%'}>\n                                {UserPDF}\n                            </PDFViewer>\n\n                            <button onClick={this.submitForm}>{'< Go back'}</button>\n                        </>\n                    )}\n                </main>\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './root/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}