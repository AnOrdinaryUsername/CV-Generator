{"version":3,"sources":["reportWebVitals.js","shared/Buttons/Buttons.jsx","features/form/components/CustomEditor.jsx","features/form/components/Inputs.jsx","features/form/components/NewInputs.jsx","features/form/components/FormFieldset.jsx","features/form/components/FormLayout.jsx","features/form/screens/Form.jsx","features/navbar/components/ColorThemeButton.jsx","features/navbar/screens/Header.jsx","features/pdf/components/PersonalInfo.jsx","utils/utility.js","features/pdf/components/List.jsx","features/pdf/components/Layout.jsx","features/pdf/components/WorkExperience.jsx","features/pdf/components/CV.jsx","features/pdf/components/fonts/DejaVu-Sans.Book.ttf","features/pdf/components/fonts/eb-garamond-v15-latin-700.ttf","features/pdf/components/fonts/eb-garamond-v15-latin-700italic.ttf","features/pdf/components/fonts/eb-garamond-v15-latin-italic.ttf","features/pdf/components/fonts/eb-garamond-v15-latin-regular.ttf","features/pdf/screens/PDF.jsx","root/App.jsx","index.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SubmitButton","className","ResetFormButton","onClick","CustomEditor","props","state","theme","handleEditorChange","bind","html","this","onChange","name","sectionName","value","modules","formats","bounds","id","placeholder","Component","toolbar","list","clipboard","matchVisual","Input","animation","autoComplete","index","isRequired","label","type","inputProps","pattern","Error","input","identifier","undefined","required","htmlFor","NewInfoButton","icon","faPlus","NewInputs","confirmDeletion","handleInputChange","event","preventDefault","window","confirm","removeInputs","target","inputs","enableAnimation","includeDelete","isPresent","map","element","rowStyle","singleStyle","isEditor","row","storedInputs","FormFieldset","info","addNewInfo","removeNewInfo","clearNewInfos","newInputs","length","propsState","JSON","parse","stringify","shift","forEach","additionalInputs","push","setState","prevProps","isReset","updateResetFlag","addNewInput","updatedInfo","NEW_INPUT_START","filter","component","removeNewInput","legend","title","description","isPersonalFieldset","initialInfo","newInfo","indice","start","FormLayout","children","onSubmit","Form","formSection","data","personal","education","work","fieldsetData","key","resetForm","ColorThemeButton","themeState","clickHandler","aria-label","faSun","faMoon","root","document","documentElement","detectColorTheme","storedTheme","localStorage","getItem","mediaQuery","matchMedia","setAttribute","matches","Header","isLightTheme","setItem","changeTheme","styles","StyleSheet","create","section","alignItems","borderBottom","flexDirection","paddingBottom","justifyContent","fontFamily","fontWeight","fontSize","lineHeight","details","specialCharacter","marginLeft","marginRight","PersonalInfo","userInfo","lastName","firstName","email","phoneNumber","residence","blackDiamond","String","fromCharCode","style","repeat","objectHasProperty","object","prop","propertyIsEnumerable","call","item","bulletPoint","paddingTop","width","itemContent","flex","paddingLeft","Item","blackSmallSquare","List","heading","marginTop","textTransform","subSection","SectionHeading","SubSection","marginTopStyle","sectionRow","bold","italic","fontStyle","SubSectionRow","columnOne","columnTwo","styleType","styleFontSize","listItem","boldAndItalic","underline","textDecoration","SubSectionListItem","node","nodeText","DOMParser","parseFromString","textContent","decorationStyle","includes","SubSectionList","parser","querySelectorAll","listNode","childNodeCount","childNodes","i","outerHTML","WorkExperience","firstRowGap","rowGap","companyName","date","editor","jobTitle","location","page","backgroundColor","padding","CV","userData","Font","register","family","fonts","src","garamond","garamondBold","garamondItalic","garamondBoldItalic","format","unicodeChar","PDF","userName","author","subject","App","template","isSubmitted","schoolName","fieldOfStudy","checkStorage","storageItem","submitForm","handleFieldChange","prevState","copyValues","original","valueObject","objectToCopyValueTo","Object","entries","objectToCopyFrom","values","reduce","accum","k","v","newEducation","copiedObject","pop","newWork","clear","UserPDF","height","ReactDOM","render","StrictMode","getElementById"],"mappings":"wYAYeA,G,OAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,iHCkBdQ,EAAe,WACjB,OAAO,wBAAQC,UAAU,gBAAlB,qBAGLC,EAAkB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OACI,wBAAQA,QAASA,EAASF,UAAU,oBAApC,yB,kBC1BFG,G,gEACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,MAAO,QAGX,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAPX,E,sDAUnB,SAAmBC,GAAO,IAAD,EACmBC,KAAKN,MAArCO,EADa,EACbA,SAAUC,EADG,EACHA,KAElBD,EAHqB,EACGE,YAEFD,EAAMH,K,oBAGhC,WACI,OACI,qBAAKT,UAAU,cAAf,SACI,cAAC,IAAD,CACIM,MAAOI,KAAKL,MAAMC,MAClBK,SAAUD,KAAKH,mBACfO,MAAOJ,KAAKN,MAAMU,MAClBC,QAASZ,EAAaY,QACtBC,QAASb,EAAaa,QACtBC,OAAQ,eACRC,GAAIR,KAAKN,MAAMc,GACfC,YAAaT,KAAKN,MAAMe,oB,GA5BjBC,cAuC3BjB,EAAaY,QAAU,CACnBM,QAAS,CAAC,CAAC,OAAQ,SAAU,aAAc,CAAC,CAAEC,KAAM,WAAa,CAAC,UAClEC,UAAW,CAEPC,aAAa,IAQrBrB,EAAaa,QAAU,CAAC,OAAQ,SAAU,YAAa,OAAQ,UAEhDb,QCnDTsB,G,OAAQ,SAAC,GAYR,IAXHC,EAWE,EAXFA,UACAC,EAUE,EAVFA,aACAC,EASE,EATFA,MACAC,EAQE,EARFA,WACAC,EAOE,EAPFA,MACAlB,EAME,EANFA,KACAD,EAKE,EALFA,SACAQ,EAIE,EAJFA,YACAN,EAGE,EAHFA,YACAkB,EAEE,EAFFA,KACAjB,EACE,EADFA,MAEMkB,EAAa,GAEnB,OAAQD,GACJ,IAAK,OAEDC,EAAWC,QAAU,sBACrBD,EAAWD,KAAO,OAClB,MACJ,IAAK,QACDC,EAAWD,KAAO,QAClB,MACJ,IAAK,MACDC,EAAWD,KAAO,MAClB,MAEJ,IAAK,SACD,MACJ,QACI,MAAM,IAAIG,MAAJ,6BAAgCH,EAAhC,0BAGd,IAAII,EAAQ,KACRC,OAAuBC,IAAVT,EAAA,UAAyBhB,GAAzB,OAAgCgB,GAAUhB,EA4B3D,OAzBIuB,EADS,WAATJ,EAEI,cAAC,EAAD,CACIb,GAAIkB,EACJzB,SAAUA,EACVG,MAAOA,EAAMsB,GACbxB,KAAMwB,EACNjB,YAAaA,EACbN,YAAaA,IAKjB,+CACIc,aAAcA,GAAgB,MAC9BT,GAAIkB,EACJxB,KAAMwB,EACNjB,YAAaA,EACbmB,SAAUT,EACVf,MAAOA,EAAMsB,IACTJ,GAPR,IAQIrB,SAAUA,KAMlB,sBAAKX,UAAW0B,EAAS,gBAAYA,GAAc,QAAnD,UACI,uBAAOa,QAASH,EAAhB,SAA6BN,IAC5BK,OAKPK,EAAgB,SAAC,GAAiB,IAAftC,EAAc,EAAdA,QACrB,OACI,yBAAQF,UAAU,6BAA6BE,QAASA,EAAxD,UACI,cAAC,IAAD,CAAiBuC,KAAMC,MAD3B,2BCMOC,G,yDAhFX,WAAYvC,GAAQ,IAAD,8BACf,cAAMA,IAEDwC,gBAAkB,EAAKA,gBAAgBpC,KAArB,gBACvB,EAAKqC,kBAAoB,EAAKA,kBAAkBrC,KAAvB,gBAJV,E,mDAOnB,SAAgBsC,GAGZ,GAFAA,EAAMC,iBAEFC,OAAOC,QAAQ,8CAA+C,CAAC,IACvDrB,EAAUlB,KAAKN,MAAfwB,MACRlB,KAAKN,MAAM8C,aAAatB,M,+BAIhC,SAAkBkB,GAAQ,IAAD,EACGA,EAAMK,OAAtBvC,EADa,EACbA,KAAME,EADO,EACPA,MACdJ,KAAKN,MAAMO,SAASD,KAAKN,MAAMS,YAAaD,EAAME,K,oBAGtD,WAAU,IAAD,SACmEJ,KAAKN,MAArEgD,EADH,EACGA,OAAQC,EADX,EACWA,gBAAiBC,EAD5B,EAC4BA,cAAe3C,EAD3C,EAC2CA,SAAU4C,EADrD,EACqDA,UAE1D,OACI,mCACKA,GACG,sBAAKvD,UAAU,aAAf,UACKoD,EAAOI,KAAI,SAACC,EAAS7B,GAElB,IAAM8B,EAAWL,EAAe,wBAAoBzB,EAAQ,GAAM,MAC5D+B,EAAcN,EAAe,oBAAgBzB,EAAQ,GAAM,KAC3DgC,EAA4B,WAAjBH,EAAQ1B,KAEzB,OAAI0B,EAAQI,IAEJ,qBAAK7D,UAAW0D,EAAhB,SACKD,EAAQI,IAAIL,KAAI,SAACpD,GACd,OACI,cAAC,EAAD,2BACQA,GADR,IAEIU,MAAO,EAAKV,MAAM0D,aAClBlC,MAAO,EAAKxB,MAAMwB,MAClBjB,SACIiD,EAAWjD,EAAW,EAAKkC,0BAUnD,cAAC,EAAD,yBACInB,UAAWiC,EACX7C,MAAO,EAAKV,MAAM0D,aAClBlC,MAAO,EAAKxB,MAAMwB,MAElBf,YAAa,EAAKT,MAAMS,aACpB4C,GANR,IAOI9C,SAAUiD,EAAWjD,EAAW,EAAKkC,wBAIhDS,GACG,wBACItD,UAAU,uCACVE,QAASQ,KAAKkC,gBAFlB,6B,GAnEJxB,cC4JT2C,E,kDA3JX,WAAY3D,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACT2D,KAAM,IAGV,EAAKC,WAAa,EAAKA,WAAWzD,KAAhB,gBAClB,EAAK0D,cAAgB,EAAKA,cAAc1D,KAAnB,gBACrB,EAAK2D,cAAgB,EAAKA,cAAc3D,KAAnB,gBATN,E,qDAanB,WAAqB,IAAD,OACZ4D,EAAY,GACRN,EAAiBpD,KAAKN,MAAtB0D,aAGR,GAAIA,EAAaO,OAFY,EAEmB,CAE5C,IAAMC,EAAaC,KAAKC,MAAMD,KAAKE,UAAUX,IAE7CQ,EAAWI,QAJiC,MAMFhE,KAAKN,MAAvCgD,EANoC,EAMpCA,OAAQzC,EAN4B,EAM5BA,SAAUE,EANkB,EAMlBA,YAE1ByD,EAAWK,SAAQ,WACf,IAAMC,EAAmB,CACrBxB,OAAQA,EACRvC,YAAaA,EACb0C,WAAW,EACXL,aAAc,EAAKgB,cACnBb,iBAAiB,EACjBC,eAAe,EACf3C,SAAUA,GAGdyD,EAAUS,KAAKD,MAGnBlE,KAAKoE,SAAS,CACVd,KAAK,GAAD,OAAMI,Q,gCAKtB,SAAmBW,GACXrE,KAAKN,MAAM4E,UAAYD,EAAUC,UAEjCtE,KAAKyD,gBACLzD,KAAKN,MAAM6E,qB,2BAInB,WACIvE,KAAKoE,SAAS,CACVd,KAAM,O,wBAId,SAAWlB,GACPA,EAAMC,iBAEN,IAAMqB,EAAY1D,KAAKN,MAAMgD,OAHf,EAIoB1C,KAAKN,MAA/BS,EAJM,EAINA,YAAaF,EAJP,EAIOA,SAEfyC,EAAS,CACXA,OAAQgB,EACRvD,YAAaA,EACb0C,WAAW,EACXL,aAAcxC,KAAKwD,cACnBb,iBAAiB,EACjBC,eAAe,EACf3C,SAAUA,GAGdD,KAAKN,MAAM8E,YAAYrE,EAAaH,KAAKL,MAAM2D,KAAKK,QAEpD3D,KAAKoE,SAAS,CACVd,KAAK,GAAD,mBAAMtD,KAAKL,MAAM2D,MAAjB,CAAuBZ,Q,2BAInC,SAAcxB,GAAQ,IAAD,OACXuD,EAAW,YAAOzE,KAAKL,MAAM2D,MAC7BoB,EAAkBxD,EAAQ,EAChCuD,EAAYvD,GAAO2B,WAAa4B,EAAYvD,GAAO2B,UAEnD7C,KAAKoE,SACD,CACId,KAAMmB,EAAYE,QAAO,SAACC,GAAD,OAAeA,EAAU/B,eAEtD,WAAO,IAAD,EACsC,EAAKnD,OAC7CmF,EAFE,EACMA,gBADN,EACsB1E,YACIuE,Q,oBAKxC,WAAU,IAAD,SAC0B1E,KAAKN,MAAMoF,OAAlCC,EADH,EACGA,MAAOC,EADV,EACUA,YAGTC,EAA+B,yBAAVF,EAErBG,EACF,cAAC,EAAD,CACIxC,OAAQ1C,KAAKN,MAAMgD,OAEnBU,aAAcpD,KAAKN,MAAM0D,aAAa,GACtCjD,YAAaH,KAAKN,MAAMS,YACxB0C,WAAW,EACXF,iBAAiB,EACjBC,eAAe,EACf3C,SAAUD,KAAKN,MAAMO,WAIrBqD,EAAStD,KAAKL,MAAd2D,KACJ6B,EAAU,KAoBd,OAlBoB,IAAhB7B,EAAKK,QAAiB3D,KAAKN,MAAM4E,UACjCa,EAAU7B,EAAKR,KAAI,SAACpD,EAAO0F,GAGvB,IACMC,EAAQD,EADS,EAEvB,OACI,cAAC,EAAD,2BACQ1F,GADR,IAIIwB,MAAOkE,EACPhC,aAAc,EAAK1D,MAAM0D,aAAaiC,UAOlD,qCACI,yBAAQ/F,UAAU,SAAlB,UACI,6BAAKyF,IACL,4BAAIC,OAER,sBAAK1F,UAAU,kBAAf,UACK4F,EACAC,GACCF,GAAsB,cAAC,EAAD,CAAezF,QAASQ,KAAKuD,uB,GArJ9C7C,aCQZ4E,G,OAVI,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC5B,OACI,yBAASlG,UAAU,iBAAnB,SACI,sBAAMA,UAAU,mBAAmBkG,SAAUA,EAA7C,SACKD,QCsMFE,G,yDAtMX,WAAY/F,GAAQ,IAAD,8BACf,cAAMA,IAGDgG,YAAc,CACf,CACIZ,OAAQ,CACJC,MAAO,uBACPC,YACI,sEAERtC,OAAQ,CACJ,CACIS,IAAK,CACD,CACI9B,KAAM,OACND,MAAO,aACPD,YAAY,EACZjB,KAAM,YACNO,YAAa,aACbQ,aAAc,cAElB,CACII,KAAM,OACND,MAAO,YACPD,YAAY,EACZjB,KAAM,WACNO,YAAa,kBACbQ,aAAc,iBAI1B,CACIkC,IAAK,CACD,CACI9B,KAAM,QACND,MAAO,gBACPD,YAAY,EACZjB,KAAM,QACNO,YAAa,6BACbQ,aAAc,SAElB,CACII,KAAM,MACND,MAAO,eACPD,YAAY,EACZjB,KAAM,cACNO,YAAa,sBACbQ,aAAc,SAI1B,CACII,KAAM,OACND,MAAO,YACPD,YAAY,EACZjB,KAAM,YACNO,YAAa,wBACbQ,aAAc,kBAI1B,CACI6D,OAAQ,CACJC,MAAO,oBACPC,YACI,qHAERtC,OAAQ,CACJ,CACIS,IAAK,CACD,CACI9B,KAAM,OACND,MAAO,cACPD,YAAY,EACZjB,KAAM,aACNO,YAAa,2BAEjB,CACIY,KAAM,OACND,MAAO,iBACPD,YAAY,EACZjB,KAAM,eACNO,YAAa,iCAIzB,CACI0C,IAAK,CACD,CACI9B,KAAM,OACND,MAAO,WACPD,YAAY,EACZjB,KAAM,WACNO,YAAa,iBAEjB,CACIY,KAAM,OACND,MAAO,OACPD,YAAY,EACZjB,KAAM,OACNO,YAAa,+BAIzB,CACIY,KAAM,SACND,MAAO,UACPlB,KAAM,SACNO,YACI,gFAIhB,CACIqE,OAAQ,CACJC,MAAO,kBACPC,YACI,sFAERtC,OAAQ,CACJ,CACIS,IAAK,CACD,CACI9B,KAAM,OACND,MAAO,eACPD,YAAY,EACZjB,KAAM,cACNO,YAAa,gBAEjB,CACIY,KAAM,OACND,MAAO,YACPD,YAAY,EACZjB,KAAM,WACNO,YAAa,2BAIzB,CACI0C,IAAK,CACD,CACI9B,KAAM,OACND,MAAO,WACPD,YAAY,EACZjB,KAAM,WACNO,YAAa,iBAEjB,CACIY,KAAM,OACND,MAAO,OACPD,YAAY,EACZjB,KAAM,OACNO,YAAa,+BAIzB,CACIY,KAAM,SACND,MAAO,UACPlB,KAAM,SACNO,YACI,0EAlKL,E,0CAyKnB,WAAU,IAAD,SAEiCT,KAAKN,MAAM0D,aAE3CuC,EAAO,CAJR,EAEGC,SAFH,EAEaC,UAFb,EAEwBC,MAGvB3F,EAAc,CAAC,WAAY,YAAa,QAE9C,OACI,eAAC,EAAD,CAAYqF,SAAUxF,KAAKN,MAAM8F,SAAjC,UACKxF,KAAK0F,YAAY5C,KAAI,SAACiD,EAAc7E,GACjC,OACI,wBAAC,EAAD,uCACQ6E,GACA,EAAKrG,OAFb,IAGI0D,aAAcuC,EAAKzE,GACnBf,YAAaA,EAAYe,GACzB8E,IAAK9E,QAIjB,sBAAK5B,UAAU,mBAAf,UACI,cAAC,EAAD,CAAiBE,QAASQ,KAAKN,MAAMuG,YACrC,cAAC,EAAD,c,GAhMDvF,cCSJwF,EAXU,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aACpC,OACI,wBACIC,aAAYF,EAAa,sBAAwB,uBACjD3G,QAAS4G,EAFb,SAII,cAAC,IAAD,CAAiBrE,KAAMoE,EAAaG,IAAQC,SCPlDC,EAAOC,SAASC,gBAEhBC,EAAoB,WAEtB,IAAI/G,EAAQ,QACNgH,EAAcC,aAAaC,QAAQ,SACnCC,EAAazE,OAAO0E,WAAW,gCAWrC,OATIJ,GACAJ,EAAKS,aAAa,aAAc,SACZ,SAAhBL,IACAhH,EAAQ,SAELmH,EAAWG,UAClBtH,EAAQ,QAGE,SAAVA,GACA4G,EAAKS,aAAa,aAAc,SACzB,IAGXT,EAAKS,aAAa,aAAc,UACzB,GArBe,GAiEXE,E,kDAxCX,aAAe,IAAD,8BACV,gBAEKxH,MAAQ,CACTyH,aAAcT,GAGd,EAAKhH,MAAMyH,aACXP,aAAaQ,QAAQ,QAAS,SAE9BR,aAAaQ,QAAQ,QAAS,QAGlC,EAAKC,YAAc,EAAKA,YAAYxH,KAAjB,gBAbT,E,+CAgBd,WAAe,IAAD,OACVE,KAAKoE,SACD,CACIgD,cAAepH,KAAKL,MAAMyH,eAE9B,WACI,IAAMxH,EAAQ,EAAKD,MAAMyH,aAAe,QAAU,OAClDZ,EAAKS,aAAa,aAAcrH,GAChCiH,aAAaQ,QAAQ,QAASzH,Q,oBAK1C,WAAU,IACEwH,EAAiBpH,KAAKL,MAAtByH,aAER,OACI,iCACI,cAAC,EAAD,CAAkBjB,WAAYiB,EAAchB,aAAcpG,KAAKsH,oB,GAnC1D5G,aC1Bf6G,EAASC,IAAWC,OAAO,CAC7BC,QAAS,CACLC,WAAY,WACZC,aAAc,kBACdC,cAAe,SACfC,cAAe,EACfC,eAAgB,cAEpB7H,KAAM,CACF8H,WAAY,WACZC,WAAY,OACZC,SAAU,GACVC,WAAY,KAEhBC,QAAS,CACLT,WAAY,WACZE,cAAe,MACfG,WAAY,WACZE,SAAU,GACVH,eAAgB,cAEpBM,iBAAkB,CACdL,WAAY,cACZM,WAAY,EACZC,YAAa,KAwBNC,EApBM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACZC,EAAuDD,EAAvDC,SAAUC,EAA6CF,EAA7CE,UAAWC,EAAkCH,EAAlCG,MAAOC,EAA2BJ,EAA3BI,YAAaC,EAAcL,EAAdK,UAG3CC,EAAeC,OAAOC,aAAa,OAEzC,OACI,eAAC,IAAD,CAAMC,MAAO3B,EAAOG,QAApB,UACI,cAAC,IAAD,CAAMwB,MAAO3B,EAAOrH,KAApB,mBAA8ByI,EAA9B,YAA2CD,KAC3C,eAAC,IAAD,CAAMQ,MAAO3B,EAAOa,QAApB,UACI,cAAC,IAAD,UAAOQ,IACP,cAAC,IAAD,CAAMM,MAAO3B,EAAOc,iBAApB,SAAuCU,IACvC,cAAC,IAAD,UAAOF,IACP,cAAC,IAAD,CAAMK,MAAO3B,EAAOc,iBAApB,SAAuCU,IACvC,cAAC,IAAD,UAAOD,W,6BCvCbK,GAHJC,EAAoB,SAACC,EAAQC,GAAT,MAAmB,GAAGC,qBAAqBC,KAAKH,EAAQC,IAGlF,SAAUH,EAAO/I,GAAjB,iEAEQ,OAFR,SAEcA,EAFd,6DCHA,IAAMmH,EAASC,IAAWC,OAAO,CAC7BgC,KAAM,CACF5B,cAAe,OAEnB6B,YAAa,CACT1B,WAAY,cACZE,SAAU,EACVyB,WAAY,EACZC,MAAO,IAEXC,YAAa,CACTC,KAAM,EACN5B,SAAU,GACVF,WAAY,WACZ+B,YAAa,KAMRC,EAAO,SAAC,GAAkB,IAAhBzE,EAAe,EAAfA,SAEb0E,EAAmBjB,OAAOC,aAAa,MAE7C,OACI,eAAC,IAAD,CAAMC,MAAO3B,EAAOkC,KAApB,UACI,cAAC,IAAD,CAAMP,MAAO3B,EAAOmC,YAApB,SAAkCO,IAClC,cAAC,IAAD,CAAMf,MAAO3B,EAAOsC,YAApB,SAAkCtE,QAK/B2E,EAdF,SAAC,GAAD,SAAG3E,UCjBVmC,EAAUF,IAAWC,OAAO,CAC9B0C,QAAS,CACLvC,aAAc,kBACdI,WAAY,WACZE,SAAU,GACVD,WAAY,OACZmC,UAAW,GACXC,cAAe,YACfvC,cAAe,GAEnBwC,WAAY,CACRF,UAAW,KAIbG,EAAiB,SAAC,GAAe,IAAbxF,EAAY,EAAZA,MACtB,OAAO,cAAC,IAAD,CAAMmE,MAAOxB,EAAQyC,QAArB,SAA+BpF,KAGpCyF,EAAa,SAAC,GAA6B,IAA3BjF,EAA0B,EAA1BA,SACZkF,EAAiB,CACnBL,UAFwC,EAAhBA,WAK5B,OAAO,cAAC,IAAD,CAAMlB,MAAOuB,EAAb,SAA8BlF,KAGnCmF,EAAalD,IAAWC,OAAO,CACjCtE,IAAK,CACD0E,cAAe,MACfE,eAAgB,iBAEpB4C,KAAM,CACF3C,WAAY,WACZC,WAAY,QAEhB2C,OAAQ,CACJ5C,WAAY,WACZ6C,UAAW,YAIbC,EAAgB,SAAC,GAA8C,IAA5CzJ,EAA2C,EAA3CA,KAAM6G,EAAqC,EAArCA,SAAU6C,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAC5CC,EAAY,KAEhB,OAAQ5J,GACJ,IAAK,OACD4J,EAAYP,EAAWC,KACvB,MACJ,IAAK,SACDM,EAAYP,EAAWE,OACvB,MACJ,QACI,MAAM,IAAIpJ,MACN,wBAAiBH,EAAjB,iFAKZ,IAAI6J,EAAgB,KACpB,GAAwB,kBAAbhD,EACP,OAAQA,GACJ,IAAK,KACDgD,EAAgB,CACZhD,SAAU,IAEd,MAEJ,IAAK,MACDgD,EAAgB,CACZhD,SAAU,IAEd,MAEJ,IAAK,KACDgD,EAAgB,CACZhD,SAAU,IAEd,MAEJ,QACI,MAAM,IAAI1G,MACN,4BAAqBH,EAArB,qGAKZ6J,EAAgB,CACZhD,SAAUA,GAIlB,OACI,eAAC,IAAD,CAAMgB,MAAO,CAACwB,EAAWvH,IAAK8H,EAAWC,GAAzC,UACI,cAAC,IAAD,UAAOH,IACP,cAAC,IAAD,UAAOC,QAKbvB,EAAOjC,IAAWC,OAAO,CAC3B0D,SAAU,CACNnD,WAAY,YAEhB2C,KAAM,CACF1C,WAAY,QAEhB2C,OAAQ,CACJC,UAAW,UAEfO,cAAe,CACXnD,WAAY,OACZ4C,UAAW,UAEfQ,UAAW,CACPC,eAAgB,eAIlBC,EAAqB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpBC,GAAW,IAAIC,WAAYC,gBAAgBH,EAAM,aAAa9E,gBAAgBkF,YAEhFf,EAAY,KACZgB,EAAkB,KActB,OAZIL,EAAKM,SAAS,aAAeN,EAAKM,SAAS,QAC3CjB,EAAYpB,EAAK2B,cACVI,EAAKM,SAAS,YACrBjB,EAAYpB,EAAKkB,KACVa,EAAKM,SAAS,UACrBjB,EAAYpB,EAAKmB,QAGjBY,EAAKM,SAAS,SACdD,EAAkBpC,EAAK4B,WAGpB,cAAC,IAAD,CAAMnC,MAAO,CAACO,EAAK0B,SAAUN,EAAWgB,GAAxC,SAA2DJ,KAGhEM,GAAiB,SAAC,GAAc,IAAZpG,EAAW,EAAXA,KAChBqG,GAAS,IAAIN,WAAYC,gBAAgBhG,EAAM,aAY/C/E,EAVY,YAAOoL,EAAOC,iBAAiB,OAUvBnJ,KAAI,SAACqI,GAI3B,IAHA,IAAMe,EAAW,GACXC,EAAiBhB,EAASiB,WAAWzI,OAElC0I,EAAI,EAAGA,EAAIF,IAAkBE,EAAG,CACrC,IAAMb,EAAOL,EAASiB,WAAWC,GAG7Bb,EAAKc,UACLJ,EAAS/H,KAAKqH,EAAKc,WAGnBJ,EAAS/H,KAAKqH,EAAKI,aAI3B,OAAOM,KAGX,OACI,cAAC,IAAD,UACI,cAAC,EAAD,UACKtL,EAAKkC,KAAI,SAAC2G,GACP,OACI,cAAC,EAAD,UACKA,EAAK3G,KAAI,SAAC0I,GACP,OAAO,cAAC,EAAD,CAAoBA,KAAMA,iBCtIlDe,GA5CQ,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,OAAQhE,EAAe,EAAfA,SAC3C,OACI,eAAC,IAAD,WACI,cAAC,EAAD,CAAgB1D,MAAM,oBACrB0D,EAAS3F,KAAI,SAAC6C,EAAMzE,GAAW,IAAD,EAC+BiI,EAAO,MADtC,mBACtBuD,EADsB,KACTC,EADS,KACHC,EADG,KACKpM,EADL,KACSqM,EADT,KACmBC,EADnB,KAkB3B,OAfI5L,EAAQ,GAERwL,EAAW,qBADXlM,EAAKU,EAAQ,GAEbyL,EAAI,cAAUnM,GACdqM,EAAQ,kBAAcrM,GACtBsM,EAAQ,kBAActM,GACtBoM,EAAM,gBAAYpM,KAElBkM,EAAc,cACdC,EAAO,OACPE,EAAW,WACXC,EAAW,WACXF,EAAS,UAIT,eAAC,EAAD,CAAYxC,UAAqB,IAAVlJ,EAAcsL,EAAcC,EAAnD,UACI,cAAC,EAAD,CACIpL,KAAK,OACL6G,SAAS,KACT6C,UAAWpF,EAAK+G,GAChB1B,UAAWrF,EAAKgH,KAEpB,cAAC,EAAD,CACItL,KAAK,SACL6G,SAAS,KACT6C,UAAWpF,EAAKkH,GAChB7B,UAAWrF,EAAKmH,KAEpB,cAAC,GAAD,CAAgBnH,KAAMA,EAAKiH,eCnC7CrF,GAASC,IAAWC,OAAO,CAC7BsF,KAAM,CACFC,gBAAiB,UACjBjF,eAAgB,aAChBkF,QAAS,GACTrD,MAAO,UAgBAsD,GAZJ,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAIV,OACI,eAAC,IAAD,CAAMjE,MAAO3B,GAAOwF,KAApB,UACI,cAAC,EAAD,CAActE,SAAU0E,EAASvH,SAAS,KAC1C,cAAC,GAAD,CAAgB6C,SAAU0E,EAASrH,KAAM0G,YAN3B,EAMuDC,OAL7D,SCjBL,OAA0B,6CCA1B,OAA0B,sDCA1B,OAA0B,4DCA1B,OAA0B,yDCA1B,OAA0B,0DCgBzCW,IAAKC,SAAS,CACVC,OAAQ,WACRC,MAAO,CACH,CACIC,IAAKC,IAET,CACID,IAAKE,GACLzF,WAAY,QAEhB,CACIuF,IAAKG,GACL9C,UAAW,UAEf,CACI2C,IAAKI,GACL3F,WAAY,OACZ4C,UAAW,aAMvBuC,IAAKC,SAAS,CACVC,OAAQ,cACRO,OAAQ,WACRL,IAAKM,KAGT,IAuBeC,GAvBH,SAAC,GAAc,IAAZpI,EAAW,EAAXA,KAAW,EACUA,EAAKC,SAAS,GAAtC+C,EADc,EACdA,UAAWD,EADG,EACHA,SACbsF,EAAQ,UAAMrF,EAAN,YAAmBD,GAEjC,OAQQ,cAAC,IAAD,CACIuF,OAAM,UAAKD,GACXE,QAAO,+BAA0BF,GACjCjJ,MAAK,+BAA0BiJ,GAHnC,SAKI,cAAC,GAAD,CAAIb,SAAUxH,OC6SfwI,G,kDAnWX,aAAe,IAAD,uBACV,gBAEKC,SAAW,CACZC,aAAa,EACb/J,SAAS,EACTsB,SAAU,CACN,CACI+C,UAAW,GACXD,SAAU,GACVE,MAAO,GACPC,YAAa,GACbC,UAAW,KAGnBjD,UAAW,CACP,CACIyI,WAAY,GACZC,aAAc,GACdzB,SAAU,GACVH,KAAM,GACNC,OACI,sHAGZ9G,KAAM,CACF,CACI4G,YAAa,GACbG,SAAU,GACVC,SAAU,GACVH,KAAM,GACNC,OACI,kFAhCN,MAqCwBzD,EAAO,MArC/B,mBAqCLvD,EArCK,KAqCKC,EArCL,KAqCgBC,EArChB,KAuCJ0I,EAAe,SAACC,GAClB,IAAMhF,EAAO5C,aAAaC,QAAQ2H,GAElC,OAAIhF,EACO5F,KAAKC,MAAM2F,GAGf,EAAK2E,SAASK,IAGzB7I,EAAW4I,EAAa,YACxB3I,EAAY2I,EAAa,aACzB1I,EAAO0I,EAAa,QAnDV,MAqDuB,EAAKJ,SAA9BC,EArDE,EAqDFA,YAAa/J,EArDX,EAqDWA,QArDX,OAuDV,EAAK3E,MAAQ,CACT0O,YAAaA,EACb/J,QAASA,EACTsB,SAAS,YAAKA,GACdC,UAAU,YAAKA,GACfC,KAAK,YAAKA,IAGd,EAAK4I,WAAa,EAAKA,WAAW5O,KAAhB,gBAClB,EAAKmG,UAAY,EAAKA,UAAUnG,KAAf,gBACjB,EAAKyE,gBAAkB,EAAKA,gBAAgBzE,KAArB,gBACvB,EAAK6O,kBAAoB,EAAKA,kBAAkB7O,KAAvB,gBACzB,EAAK0E,YAAc,EAAKA,YAAY1E,KAAjB,gBACnB,EAAK+E,eAAiB,EAAKA,eAAe/E,KAApB,gBApEZ,E,+CAuEd,SAAYK,EAAae,GAAQ,IAAD,OAC5B,OAAQf,GACJ,IAAK,YACD,IAAMmO,EAAU,oBAAgBpN,GAC1BqN,EAAY,sBAAkBrN,GAC9B4L,EAAQ,kBAAc5L,GACtByL,EAAI,cAAUzL,GACd0L,EAAM,gBAAY1L,GAExBlB,KAAKoE,UACD,SAACwK,GAAD,yBAAC,eACMA,GADP,IAEI/I,UAAU,GAAD,mBACF+I,EAAU/I,WADR,qBAGAyI,EAAa,IAHb,cAIAC,EAAe,IAJf,cAKAzB,EAAW,IALX,cAMAH,EAAO,IANP,cAOAC,EACG,qHARH,UAYb,WACI/F,aAAaQ,QAAQlH,EAAa0D,KAAKE,UAAU,EAAKpE,MAAMkG,eAGpE,MAEJ,IAAK,OACD,IAAM6G,EAAW,qBAAiBxL,GAC5B2L,EAAQ,kBAAc3L,GACtB4L,EAAQ,kBAAc5L,GACtByL,EAAI,cAAUzL,GACd0L,EAAM,gBAAY1L,GAExBlB,KAAKoE,UACD,SAACwK,GAAD,yBAAC,eACMA,GADP,IAEI9I,KAAK,GAAD,mBACG8I,EAAU9I,MADb,qBAGK4G,EAAc,IAHnB,cAIKG,EAAW,IAJhB,cAKKC,EAAW,IALhB,cAMKH,EAAO,IANZ,cAOKC,EACG,gFARR,UAYR,WACI/F,aAAaQ,QAAQlH,EAAa0D,KAAKE,UAAU,EAAKpE,MAAMmG,UAGpE,MAEJ,QACI,MAAM,IAAItE,MACN,mCAA4BrB,EAA5B,iBACI,mD,4BAKpB,SAAeA,EAAae,GAAQ,IAAD,OAIzB2N,EAAa,SAACC,EAAUC,GAC1B,IAAMC,EAAsBC,OAAOC,QAAQJ,GACrCK,EAAmBF,OAAOG,OAAOL,GAYvC,OAVAC,EAAoB/K,SAAQ,SAAClB,EAAS7B,GAElC6B,EADc,GACGoM,EAAiBjO,MAGjB8N,EAAoBK,QAAO,SAACC,EAAD,GAAoB,IAAD,mBAAVC,EAAU,KAAPC,EAAO,KAE/D,OADAF,EAAMC,GAAKC,EACJF,IACR,KAKP,OAAQnP,GACJ,IAAK,YAGD,IAFA,IAAMsP,EAAY,YAAOzP,KAAKL,MAAMkG,WAE3BwG,EAAInL,EAAOmL,EAAIoD,EAAa9L,SAAU0I,EAAG,CAC9C,IAAMhH,EAAQgH,EAAI,EAElB,GAAIhH,GAASoK,EAAa9L,OACtB,MAGJ,IAAM+L,EAAeb,EAAWY,EAAapD,GAAIoD,EAAapK,IAC9DoK,EAAapD,GAAKqD,EAStBD,EAAaE,MAEb3P,KAAKoE,UACD,SAACwK,GAAD,mBAAC,eACMA,GADP,IAEI/I,UAAW4J,OAEf,WACI5I,aAAaQ,QAAQlH,EAAa0D,KAAKE,UAAU,EAAKpE,MAAMkG,eAGpE,MAEJ,IAAK,OAGD,IAFA,IAAM+J,EAAO,YAAO5P,KAAKL,MAAMmG,MAEtBuG,EAAInL,EAAOmL,EAAIuD,EAAQjM,SAAU0I,EAAG,CACzC,IAAMhH,EAAQgH,EAAI,EAElB,GAAIhH,GAASuK,EAAQjM,OACjB,MAGJ,IAAM+L,EAAeb,EAAWe,EAAQvD,GAAIuD,EAAQvK,IACpDuK,EAAQvD,GAAKqD,EAGjBE,EAAQD,MAER3P,KAAKoE,UACD,SAACwK,GAAD,mBAAC,eACMA,GADP,IAEI9I,KAAM8J,OAEV,WACI/I,aAAaQ,QAAQlH,EAAa0D,KAAKE,UAAU,EAAKpE,MAAMmG,UAGpE,MAEJ,QACI,MAAM,IAAItE,MACN,mCAA4BrB,EAA5B,iBACI,mD,+BAMpB,SAAkBA,EAAaD,EAAME,GAAQ,IAAD,OACxC,OAAQD,GACJ,IAAK,WACDH,KAAKoE,UACD,SAACwK,GAAD,mBAAC,eACMA,GADP,IAEIhJ,SAAU,CAAC,2BAEAgJ,EAAUhJ,SAAS,IAFpB,kBAGD1F,EAAOE,UAIpB,WACIyG,aAAaQ,QAAQlH,EAAa0D,KAAKE,UAAU,EAAKpE,MAAMiG,cAGpE,MAEJ,IAAK,YACD5F,KAAKoE,UACD,SAACwK,GAAD,mBAAC,eACMA,GADP,IAEI/I,UAAW+I,EAAU/I,UAAU/C,KAAI,SAACnD,GAEhC,OADqByJ,EAAkBzJ,EAAOO,GAC3B,2BAAQP,GAAR,kBAAgBO,EAAOE,IAAUT,UAG5D,WACIkH,aAAaQ,QAAQlH,EAAa0D,KAAKE,UAAU,EAAKpE,MAAMkG,eAGpE,MAEJ,IAAK,OACD7F,KAAKoE,UACD,SAACwK,GAAD,mBAAC,eACMA,GADP,IAEI9I,KAAM8I,EAAU9I,KAAKhD,KAAI,SAACnD,GAEtB,OADqByJ,EAAkBzJ,EAAOO,GAC3B,2BAAQP,GAAR,kBAAgBO,EAAOE,IAAUT,UAG5D,WACIkH,aAAaQ,QAAQlH,EAAa0D,KAAKE,UAAU,EAAKpE,MAAMmG,UAGpE,MAEJ,QACI,MAAM,IAAItE,MACN,mCAA4BrB,EAA5B,iBACI,+D,uBAKpB,SAAUiC,GAGN,GAFAA,EAAMC,iBAEFC,OAAOC,QAAQ,4CAA6C,CAC5DsE,aAAagJ,QAD+C,MAGT7P,KAAKoO,SAAhDC,EAHoD,EAGpDA,YAAazI,EAHuC,EAGvCA,SAAUC,EAH6B,EAG7BA,UAAWC,EAHkB,EAGlBA,KAE1C9F,KAAKoE,SAAS,CACViK,YAAaA,EACb/J,SAAS,EACTsB,SAAS,YAAKA,GACdC,UAAU,YAAKA,GACfC,KAAK,YAAKA,Q,6BAKtB,WACI9F,KAAKoE,SAAS,CACVE,SAAS,M,wBAIjB,WACItE,KAAKoE,SAAS,CACViK,aAAcrO,KAAKL,MAAM0O,gB,oBAIjC,WAAU,IAAD,EAC6BrO,KAAKL,MAA/B0O,EADH,EACGA,YAAazI,EADhB,EACgBA,SAGjBkK,GAFU,UAAMlK,EAAS,GAAG+C,WAAlB,OAA8B/C,EAAS,GAAG8C,SAA1C,MAEA,MAKd,OAJI1I,KAAKL,MAAM0O,cACXyB,EAAU,cAAC,GAAD,CAAKnK,KAAM3F,KAAKL,SAI1B,qCACI,cAAC,EAAD,IACA,kCACM0O,GACE,cAAC,EAAD,CACI7I,SAAUxF,KAAK0O,WACfzO,SAAUD,KAAK2O,kBACfnK,YAAaxE,KAAKwE,YAClBK,eAAgB7E,KAAK6E,eACrBoB,UAAWjG,KAAKiG,UAChB3B,QAAStE,KAAKL,MAAM2E,QACpBC,gBAAiBvE,KAAKuE,gBACtBnB,aAAcpD,KAAKL,QAG1B0O,GACG,qCACI,cAAC,IAAD,CAAWzE,MAAO,MAAOmG,OAAQ,OAAjC,SACKD,IAGL,wBAAQtQ,QAASQ,KAAK0O,WAAtB,SAAmC,2B,GA3V7ChO,aCDlBsP,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJzJ,SAAS0J,eAAe,SAM5BvR,M","file":"static/js/main.3535bf55.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { faDownload, faPrint } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport './Buttons.css';\n\nconst PrintButton = () => {\n    const printPage = () => window.print();\n\n    return (\n        <button className=\"button button--md print\" onClick={printPage}>\n            <FontAwesomeIcon icon={faPrint} />\n            Print page\n        </button>\n    );\n};\n\nconst DownloadButton = ({ firstName, lastName }) => {\n    return (\n        <button className=\"button button--md download\">\n            <FontAwesomeIcon icon={faDownload} />\n            Download as PDF\n        </button>\n    );\n};\n\nconst SubmitButton = () => {\n    return <button className=\"button submit\">Submit</button>;\n};\n\nconst ResetFormButton = ({ onClick }) => {\n    return (\n        <button onClick={onClick} className=\"button reset-form\">\n            Reset Form\n        </button>\n    );\n};\n\nexport { PrintButton, DownloadButton, SubmitButton, ResetFormButton };\n","import React, { Component } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport './CustomEditor.css';\n\nclass CustomEditor extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            theme: 'snow',\n        };\n\n        this.handleEditorChange = this.handleEditorChange.bind(this);\n    }\n\n    handleEditorChange(html) {\n        const { onChange, name, sectionName } = this.props;\n\n        onChange(sectionName, name, html);\n    }\n\n    render() {\n        return (\n            <div className=\"text-editor\">\n                <ReactQuill\n                    theme={this.state.theme}\n                    onChange={this.handleEditorChange}\n                    value={this.props.value}\n                    modules={CustomEditor.modules}\n                    formats={CustomEditor.formats}\n                    bounds={'.text-editor'}\n                    id={this.props.id}\n                    placeholder={this.props.placeholder}\n                />\n            </div>\n        );\n    }\n}\n\n/*\n * Quill modules to attach to editor\n * See https://quilljs.com/docs/modules/ for complete options\n */\nCustomEditor.modules = {\n    toolbar: [['bold', 'italic', 'underline'], [{ list: 'bullet' }], ['clean']],\n    clipboard: {\n        // toggle to add extra line breaks when pasting HTML:\n        matchVisual: false,\n    },\n};\n\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nCustomEditor.formats = ['bold', 'italic', 'underline', 'list', 'bullet'];\n\nexport default CustomEditor;\n","import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport '../../../shared/Buttons/Buttons.css';\nimport CustomEditor from '../components/CustomEditor';\nimport './Inputs.css';\n\nconst Input = ({\n    animation,\n    autoComplete,\n    index,\n    isRequired,\n    label,\n    name,\n    onChange,\n    placeholder,\n    sectionName,\n    type,\n    value,\n}) => {\n    const inputProps = {};\n\n    switch (type) {\n        case 'text':\n            // Allows all language characters. \\w allows whitespace\n            inputProps.pattern = '^[\\\\p{L}\\\\p{M}, ]*$';\n            inputProps.type = 'text';\n            break;\n        case 'email':\n            inputProps.type = 'email';\n            break;\n        case 'tel':\n            inputProps.type = 'tel';\n            break;\n        // Custom Editor from react-quill\n        case 'editor':\n            break;\n        default:\n            throw new Error(`Unknown input type ${type} passed to <Input />.`);\n    }\n\n    let input = null;\n    let identifier = index !== undefined ? `${name}${index}` : name;\n\n    if (type === 'editor') {\n        input = (\n            <CustomEditor\n                id={identifier}\n                onChange={onChange}\n                value={value[identifier]}\n                name={identifier}\n                placeholder={placeholder}\n                sectionName={sectionName}\n            />\n        );\n    } else {\n        input = (\n            <input\n                autoComplete={autoComplete || 'off'}\n                id={identifier}\n                name={identifier} // Used for setting values in state\n                placeholder={placeholder}\n                required={isRequired}\n                value={value[identifier]} // Value in text\n                {...inputProps}\n                onChange={onChange}\n            />\n        );\n    }\n\n    return (\n        <div className={animation ? `input ${animation}` : 'input'}>\n            <label htmlFor={identifier}>{label}</label>\n            {input}\n        </div>\n    );\n};\n\nconst NewInfoButton = ({ onClick }) => {\n    return (\n        <button className=\"button button--md new-info\" onClick={onClick}>\n            <FontAwesomeIcon icon={faPlus} />\n            Add more information\n        </button>\n    );\n};\n\nexport { Input, NewInfoButton };\n","import React, { Component } from 'react';\nimport '../../../shared/Buttons/Buttons.css';\nimport { Input } from '../components/Inputs';\nimport './FormFieldset.css';\n\nclass NewInputs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.confirmDeletion = this.confirmDeletion.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    confirmDeletion(event) {\n        event.preventDefault();\n\n        if (window.confirm('Are you sure you want to delete this item?')) {\n            const { index } = this.props;\n            this.props.removeInputs(index);\n        }\n    }\n\n    handleInputChange(event) {\n        const { name, value } = event.target;\n        this.props.onChange(this.props.sectionName, name, value);\n    }\n\n    render() {\n        const { inputs, enableAnimation, includeDelete, onChange, isPresent } = this.props;\n\n        return (\n            <>\n                {isPresent && (\n                    <div className=\"new-inputs\">\n                        {inputs.map((element, index) => {\n                            // Show animation only when adding new inputs.\n                            const rowStyle = enableAnimation ? `row text-anim-${index + 1}` : 'row';\n                            const singleStyle = enableAnimation ? `text-anim-${index + 1}` : null;\n                            const isEditor = element.type === 'editor';\n\n                            if (element.row) {\n                                return (\n                                    <div className={rowStyle}>\n                                        {element.row.map((props) => {\n                                            return (\n                                                <Input\n                                                    {...props}\n                                                    value={this.props.storedInputs}\n                                                    index={this.props.index}\n                                                    onChange={\n                                                        isEditor ? onChange : this.handleInputChange\n                                                    }\n                                                />\n                                            );\n                                        })}\n                                    </div>\n                                );\n                            }\n\n                            return (\n                                <Input\n                                    animation={singleStyle}\n                                    value={this.props.storedInputs}\n                                    index={this.props.index}\n                                    // For CustomEditor\n                                    sectionName={this.props.sectionName}\n                                    {...element}\n                                    onChange={isEditor ? onChange : this.handleInputChange}\n                                />\n                            );\n                        })}\n                        {includeDelete && (\n                            <button\n                                className=\"button button--sm delete text-anim-4\"\n                                onClick={this.confirmDeletion}\n                            >\n                                Delete\n                            </button>\n                        )}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default NewInputs;\n","import React, { Component } from 'react';\nimport { NewInfoButton } from '../components/Inputs';\nimport './FormFieldset.css';\nimport NewInputs from './NewInputs';\n\nclass FormFieldset extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            info: [],\n        };\n\n        this.addNewInfo = this.addNewInfo.bind(this);\n        this.removeNewInfo = this.removeNewInfo.bind(this);\n        this.clearNewInfos = this.clearNewInfos.bind(this);\n    }\n\n    // Could've been done in the constructor but there's a lot of code.\n    componentDidMount() {\n        let newInputs = [];\n        const { storedInputs } = this.props;\n        const INITIAL_INPUT_LENGTH = 1;\n\n        if (storedInputs.length > INITIAL_INPUT_LENGTH) {\n            // Deep clone so we don't delete the first element in passed state.\n            const propsState = JSON.parse(JSON.stringify(storedInputs));\n            // No need to have initial values in. Only new inputs.\n            propsState.shift();\n\n            const { inputs, onChange, sectionName } = this.props;\n\n            propsState.forEach(() => {\n                const additionalInputs = {\n                    inputs: inputs,\n                    sectionName: sectionName,\n                    isPresent: true,\n                    removeInputs: this.removeNewInfo,\n                    enableAnimation: true,\n                    includeDelete: true,\n                    onChange: onChange,\n                };\n\n                newInputs.push(additionalInputs);\n            });\n\n            this.setState({\n                info: [...newInputs],\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.isReset !== prevProps.isReset) {\n            // This will cause 2 rerenders\n            this.clearNewInfos();\n            this.props.updateResetFlag();\n        }\n    }\n\n    clearNewInfos() {\n        this.setState({\n            info: [],\n        });\n    }\n\n    addNewInfo(event) {\n        event.preventDefault();\n\n        const newInputs = this.props.inputs;\n        const { sectionName, onChange } = this.props;\n\n        const inputs = {\n            inputs: newInputs,\n            sectionName: sectionName,\n            isPresent: true,\n            removeInputs: this.removeNewInfo,\n            enableAnimation: true,\n            includeDelete: true,\n            onChange: onChange,\n        };\n\n        this.props.addNewInput(sectionName, this.state.info.length);\n\n        this.setState({\n            info: [...this.state.info, inputs],\n        });\n    }\n\n    removeNewInfo(index) {\n        const updatedInfo = [...this.state.info];\n        const NEW_INPUT_START = index + 1;\n        updatedInfo[index].isPresent = !updatedInfo[index].isPresent;\n\n        this.setState(\n            {\n                info: updatedInfo.filter((component) => component.isPresent),\n            },\n            () => {\n                const { removeNewInput, sectionName } = this.props;\n                removeNewInput(sectionName, NEW_INPUT_START);\n            }\n        );\n    }\n\n    render() {\n        const { title, description } = this.props.legend;\n        // Don't show <NewInfoButton /> on 'Personal Information' fieldset since they're is no\n        // reason to add more personal info.\n        const isPersonalFieldset = title === 'Personal Information';\n\n        const initialInfo = (\n            <NewInputs\n                inputs={this.props.inputs}\n                // Passed state\n                storedInputs={this.props.storedInputs[0]} // array and use index to access storedInputs\n                sectionName={this.props.sectionName}\n                isPresent={true}\n                enableAnimation={false}\n                includeDelete={false}\n                onChange={this.props.onChange}\n            />\n        );\n\n        const { info } = this.state;\n        let newInfo = null;\n\n        if (info.length !== 0 && !this.props.isReset) {\n            newInfo = info.map((props, indice) => {\n                // index is used as an identifier for newly add inputs\n                // storedInputs begin at 1 since initialInfo (name with no identifier) begins at 0\n                const NEW_INFO_START = 1;\n                const start = indice + NEW_INFO_START;\n                return (\n                    <NewInputs\n                        {...props}\n                        // Assign an index to each input's name attribute for differentiation.\n                        // Ex. name = 'schoolName0' for a newly added info input\n                        index={indice}\n                        storedInputs={this.props.storedInputs[start]}\n                    />\n                );\n            });\n        }\n\n        return (\n            <fieldset>\n                <legend className=\"legend\">\n                    <h2>{title}</h2>\n                    <p>{description}</p>\n                </legend>\n                <div className=\"input-container\">\n                    {initialInfo}\n                    {newInfo}\n                    {!isPersonalFieldset && <NewInfoButton onClick={this.addNewInfo} />}\n                </div>\n            </fieldset>\n        );\n    }\n}\n\nexport default FormFieldset;\n","import React from 'react';\nimport './FormLayout.css';\n\nconst FormLayout = ({ children, onSubmit }) => {\n    return (\n        <section className=\"form-container\">\n            <form className=\"form form--round\" onSubmit={onSubmit}>\n                {children}\n            </form>\n        </section>\n    );\n};\n\nexport default FormLayout;\n","import React, { Component } from 'react';\nimport { ResetFormButton, SubmitButton } from '../../../shared/Buttons/Buttons';\nimport FormFieldset from '../components/FormFieldset';\nimport FormLayout from '../components/FormLayout';\nimport './Form.css';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n\n        // Template for inputs.\n        this.formSection = [\n            {\n                legend: {\n                    title: 'Personal Information',\n                    description:\n                        'Share your contact information so companies know how to reach you.',\n                },\n                inputs: [\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'First Name',\n                                isRequired: true,\n                                name: 'firstName',\n                                placeholder: 'e.g. Biggy',\n                                autoComplete: 'given-name',\n                            },\n                            {\n                                type: 'text',\n                                label: 'Last Name',\n                                isRequired: true,\n                                name: 'lastName',\n                                placeholder: 'e.g. Enterprise',\n                                autoComplete: 'family-name',\n                            },\n                        ],\n                    },\n                    {\n                        row: [\n                            {\n                                type: 'email',\n                                label: 'Email address',\n                                isRequired: true,\n                                name: 'email',\n                                placeholder: 'e.g. enterprise6@email.com',\n                                autoComplete: 'email',\n                            },\n                            {\n                                type: 'tel',\n                                label: 'Phone Number',\n                                isRequired: true,\n                                name: 'phoneNumber',\n                                placeholder: 'e.g. (123) 456-7890',\n                                autoComplete: 'tel',\n                            },\n                        ],\n                    },\n                    {\n                        type: 'text',\n                        label: 'Residence',\n                        isRequired: true,\n                        name: 'residence',\n                        placeholder: 'e.g. Newport News, US',\n                        autoComplete: 'country-name',\n                    },\n                ],\n            },\n            {\n                legend: {\n                    title: 'Education History',\n                    description:\n                        'Having a degree demonstrates an ability to learn. Although not required, you may include it if you wish to share.',\n                },\n                inputs: [\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'School Name',\n                                isRequired: false,\n                                name: 'schoolName',\n                                placeholder: 'e.g. Harvard University',\n                            },\n                            {\n                                type: 'text',\n                                label: 'Field of Study',\n                                isRequired: false,\n                                name: 'fieldOfStudy',\n                                placeholder: 'e.g. Computer Science, B.S.',\n                            },\n                        ],\n                    },\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'Location',\n                                isRequired: false,\n                                name: 'location',\n                                placeholder: 'e.g. Oahu, HI',\n                            },\n                            {\n                                type: 'text',\n                                label: 'Date',\n                                isRequired: false,\n                                name: 'date',\n                                placeholder: 'e.g. May 1938 - Feb. 1947',\n                            },\n                        ],\n                    },\n                    {\n                        type: 'editor',\n                        label: 'Details',\n                        name: 'editor',\n                        placeholder:\n                            'List all descriptions of important academic achievements in bullet points.',\n                    },\n                ],\n            },\n            {\n                legend: {\n                    title: 'Work Experience',\n                    description:\n                        'Employers love practical experience. Show them what skills you bring to the table.',\n                },\n                inputs: [\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'Company Name',\n                                isRequired: false,\n                                name: 'companyName',\n                                placeholder: 'e.g. US Navy',\n                            },\n                            {\n                                type: 'text',\n                                label: 'Job Title',\n                                isRequired: false,\n                                name: 'jobTitle',\n                                placeholder: 'e.g. Aircraft Carrier',\n                            },\n                        ],\n                    },\n                    {\n                        row: [\n                            {\n                                type: 'text',\n                                label: 'Location',\n                                isRequired: false,\n                                name: 'location',\n                                placeholder: 'e.g. Oahu, HI',\n                            },\n                            {\n                                type: 'text',\n                                label: 'Date',\n                                isRequired: false,\n                                name: 'date',\n                                placeholder: 'e.g. May 1938 - Feb. 1947',\n                            },\n                        ],\n                    },\n                    {\n                        type: 'editor',\n                        label: 'Details',\n                        name: 'editor',\n                        placeholder:\n                            'List all descriptions of applied skills and roles in bullet points.',\n                    },\n                ],\n            },\n        ];\n    }\n\n    render() {\n        // Passed App state.\n        const { personal, education, work } = this.props.storedInputs;\n        // Arrays with object data\n        const data = [personal, education, work];\n        const sectionName = ['personal', 'education', 'work'];\n\n        return (\n            <FormLayout onSubmit={this.props.onSubmit}>\n                {this.formSection.map((fieldsetData, index) => {\n                    return (\n                        <FormFieldset\n                            {...fieldsetData}\n                            {...this.props}\n                            storedInputs={data[index]}\n                            sectionName={sectionName[index]}\n                            key={index}\n                        />\n                    );\n                })}\n                <div className=\"button-container\">\n                    <ResetFormButton onClick={this.props.resetForm} />\n                    <SubmitButton />\n                </div>\n            </FormLayout>\n        );\n    }\n}\n\nexport default Form;\n","import { faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nconst ColorThemeButton = ({ themeState, clickHandler }) => {\n    return (\n        <button\n            aria-label={themeState ? 'Activate dark theme' : 'Activate light theme'}\n            onClick={clickHandler}\n        >\n            <FontAwesomeIcon icon={themeState ? faSun : faMoon} />\n        </button>\n    );\n};\n\nexport default ColorThemeButton;\n","import React, { Component } from 'react';\nimport ColorThemeButton from '../components/ColorThemeButton';\n\nconst root = document.documentElement;\n\nconst detectColorTheme = (() => {\n    // Initial color theme.\n    let theme = 'light';\n    const storedTheme = localStorage.getItem('theme');\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n    if (storedTheme) {\n        root.setAttribute('data-theme', 'light');\n        if (storedTheme === 'dark') {\n            theme = 'dark';\n        }\n    } else if (mediaQuery.matches) {\n        theme = 'dark';\n    }\n\n    if (theme === 'dark') {\n        root.setAttribute('data-theme', 'dark');\n        return false;\n    }\n\n    root.setAttribute('data-theme', 'light');\n    return true;\n})();\n\nclass Header extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            isLightTheme: detectColorTheme,\n        };\n\n        if (this.state.isLightTheme) {\n            localStorage.setItem('theme', 'light');\n        } else {\n            localStorage.setItem('theme', 'dark');\n        }\n\n        this.changeTheme = this.changeTheme.bind(this);\n    }\n\n    changeTheme() {\n        this.setState(\n            {\n                isLightTheme: !this.state.isLightTheme,\n            },\n            () => {\n                const theme = this.state.isLightTheme ? 'light' : 'dark';\n                root.setAttribute('data-theme', theme);\n                localStorage.setItem('theme', theme);\n            }\n        );\n    }\n\n    render() {\n        const { isLightTheme } = this.state;\n\n        return (\n            <header>\n                <ColorThemeButton themeState={isLightTheme} clickHandler={this.changeTheme} />\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","import { StyleSheet, Text, View } from '@react-pdf/renderer';\nimport React from 'react';\n\nconst styles = StyleSheet.create({\n    section: {\n        alignItems: 'baseline',\n        borderBottom: '1 solid #000000',\n        flexDirection: 'column',\n        paddingBottom: 4,\n        justifyContent: 'flex-start',\n    },\n    name: {\n        fontFamily: 'Garamond',\n        fontWeight: 'bold',\n        fontSize: 24,\n        lineHeight: 1.2,\n    },\n    details: {\n        alignItems: 'baseline',\n        flexDirection: 'row',\n        fontFamily: 'Garamond',\n        fontSize: 16,\n        justifyContent: 'flex-start',\n    },\n    specialCharacter: {\n        fontFamily: 'DejaVu Sans',\n        marginLeft: 4,\n        marginRight: 4,\n    },\n});\n\nconst PersonalInfo = ({ userInfo }) => {\n    const { lastName, firstName, email, phoneNumber, residence } = userInfo;\n\n    // This unicode character \"❖\".\n    const blackDiamond = String.fromCharCode(0x2756);\n\n    return (\n        <View style={styles.section}>\n            <Text style={styles.name}>{`${firstName} ${lastName}`}</Text>\n            <View style={styles.details}>\n                <Text>{email}</Text>\n                <Text style={styles.specialCharacter}>{blackDiamond}</Text>\n                <Text>{phoneNumber}</Text>\n                <Text style={styles.specialCharacter}>{blackDiamond}</Text>\n                <Text>{residence}</Text>\n            </View>\n        </View>\n    );\n};\n\nexport default PersonalInfo;\n","// object => object literal\n// prop => string (the property inside the object literal)\n// return => boolean\nconst objectHasProperty = (object, prop) => ({}.propertyIsEnumerable.call(object, prop));\n\n// Just to assign multiple variables a single value easily.\nfunction* repeat(value) {\n    while (true) {\n        yield value;\n    }\n}\n\nexport { objectHasProperty, repeat };\n","import { StyleSheet, Text, View } from '@react-pdf/renderer';\nimport React from 'react';\n\nconst styles = StyleSheet.create({\n    item: {\n        flexDirection: 'row',\n    },\n    bulletPoint: {\n        fontFamily: 'DejaVu Sans',\n        fontSize: 6,\n        paddingTop: 4,\n        width: 12,\n    },\n    itemContent: {\n        flex: 1,\n        fontSize: 12,\n        fontFamily: 'Garamond',\n        paddingLeft: 6,\n    },\n});\n\nconst List = ({ children }) => children;\n\nexport const Item = ({ children }) => {\n    // This unicode character \"▪\".\n    const blackSmallSquare = String.fromCharCode(0x25aa);\n\n    return (\n        <View style={styles.item}>\n            <Text style={styles.bulletPoint}>{blackSmallSquare}</Text>\n            <Text style={styles.itemContent}>{children}</Text>\n        </View>\n    );\n};\n\nexport default List;\n","import { StyleSheet, Text, View } from '@react-pdf/renderer';\nimport React from 'react';\nimport List, { Item } from './List';\n\nconst section = StyleSheet.create({\n    heading: {\n        borderBottom: '1 solid #000000',\n        fontFamily: 'Garamond',\n        fontSize: 12,\n        fontWeight: 'bold',\n        marginTop: 16,\n        textTransform: 'uppercase',\n        paddingBottom: 2,\n    },\n    subSection: {\n        marginTop: 8,\n    },\n});\n\nconst SectionHeading = ({ title }) => {\n    return <Text style={section.heading}>{title}</Text>;\n};\n\nconst SubSection = ({ children, marginTop }) => {\n    const marginTopStyle = {\n        marginTop: marginTop,\n    };\n\n    return <View style={marginTopStyle}>{children}</View>;\n};\n\nconst sectionRow = StyleSheet.create({\n    row: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    bold: {\n        fontFamily: 'Garamond',\n        fontWeight: 'bold',\n    },\n    italic: {\n        fontFamily: 'Garamond',\n        fontStyle: 'italic',\n    },\n});\n\nconst SubSectionRow = ({ type, fontSize, columnOne, columnTwo }) => {\n    let styleType = null;\n\n    switch (type) {\n        case 'bold':\n            styleType = sectionRow.bold;\n            break;\n        case 'italic':\n            styleType = sectionRow.italic;\n            break;\n        default:\n            throw new Error(\n                `Unknown type '${type}' was passed to <SubSectionRow>.` +\n                    `Only valid types are 'bold' and 'italic'.`\n            );\n    }\n\n    let styleFontSize = null;\n    if (typeof fontSize === 'string')\n        switch (fontSize) {\n            case 'sm':\n                styleFontSize = {\n                    fontSize: 12,\n                };\n                break;\n\n            case 'med':\n                styleFontSize = {\n                    fontSize: 16,\n                };\n                break;\n\n            case 'lg':\n                styleFontSize = {\n                    fontSize: 24,\n                };\n                break;\n\n            default:\n                throw new Error(\n                    `Unknown fontSize '${type}' was passed to <SubSectionRow>.` +\n                        `Only valid fontSizes are 'sm', 'med', 'lg', or a number.`\n                );\n        }\n    else {\n        styleFontSize = {\n            fontSize: fontSize,\n        };\n    }\n\n    return (\n        <View style={[sectionRow.row, styleType, styleFontSize]}>\n            <Text>{columnOne}</Text>\n            <Text>{columnTwo}</Text>\n        </View>\n    );\n};\n\nconst item = StyleSheet.create({\n    listItem: {\n        fontFamily: 'Garamond',\n    },\n    bold: {\n        fontWeight: 'bold',\n    },\n    italic: {\n        fontStyle: 'italic',\n    },\n    boldAndItalic: {\n        fontWeight: 'bold',\n        fontStyle: 'italic',\n    },\n    underline: {\n        textDecoration: 'underline',\n    },\n});\n\nconst SubSectionListItem = ({ node }) => {\n    const nodeText = new DOMParser().parseFromString(node, 'text/html').documentElement.textContent;\n\n    let fontStyle = null;\n    let decorationStyle = null;\n\n    if (node.includes('<strong>') && node.includes('<em>')) {\n        fontStyle = item.boldAndItalic;\n    } else if (node.includes('<strong>')) {\n        fontStyle = item.bold;\n    } else if (node.includes('<em>')) {\n        fontStyle = item.italic;\n    }\n\n    if (node.includes('<u>')) {\n        decorationStyle = item.underline;\n    }\n\n    return <Text style={[item.listItem, fontStyle, decorationStyle]}>{nodeText}</Text>;\n};\n\nconst SubSectionList = ({ data }) => {\n    const parser = new DOMParser().parseFromString(data, 'text/html');\n    // Stores all <li>s and their contents in 1D array.\n    const bulletPoints = [...parser.querySelectorAll('li')];\n\n    /* Goes through each <li> and stores all the individual nodes in an array (which is inside\n     *  another array so it's 2D).\n     *\n     * e.g. const bulletPoints = [ \"<li>Wowee<li>\", \"<li><em>italic</em> text</li>\"];\n     *\n     *       map result:\n     *       const list = [ [\"Wowee\"], [\"<em>italic</em>\", \" text\"] ];\n     */\n    const list = bulletPoints.map((listItem) => {\n        const listNode = [];\n        const childNodeCount = listItem.childNodes.length;\n\n        for (let i = 0; i < childNodeCount; ++i) {\n            const node = listItem.childNodes[i];\n\n            // If node is of type 'Element' return HTML string\n            if (node.outerHTML) {\n                listNode.push(node.outerHTML);\n                // Otherwise grab text from 'Text' node\n            } else {\n                listNode.push(node.textContent);\n            }\n        }\n\n        return listNode;\n    });\n\n    return (\n        <View>\n            <List>\n                {list.map((item) => {\n                    return (\n                        <Item>\n                            {item.map((node) => {\n                                return <SubSectionListItem node={node} />;\n                            })}\n                        </Item>\n                    );\n                })}\n            </List>\n        </View>\n    );\n};\n\nexport { SectionHeading, SubSection, SubSectionRow, SubSectionList };\n","import { View } from '@react-pdf/renderer';\nimport React from 'react';\nimport { repeat } from '../../../utils/utility';\nimport { SectionHeading, SubSection, SubSectionList, SubSectionRow } from './Layout';\n\nconst WorkExperience = ({ firstRowGap, rowGap, userInfo }) => {\n    return (\n        <View>\n            <SectionHeading title=\"Work Experience\" />\n            {userInfo.map((data, index) => {\n                let [companyName, date, editor, id, jobTitle, location] = repeat(null);\n\n                if (index > 0) {\n                    id = index - 1;\n                    companyName = `companyName${id}`;\n                    date = `date${id}`;\n                    jobTitle = `jobTitle${id}`;\n                    location = `location${id}`;\n                    editor = `editor${id}`;\n                } else {\n                    companyName = 'companyName';\n                    date = 'date';\n                    jobTitle = 'jobTitle';\n                    location = 'location';\n                    editor = 'editor';\n                }\n\n                return (\n                    <SubSection marginTop={index === 0 ? firstRowGap : rowGap}>\n                        <SubSectionRow\n                            type=\"bold\"\n                            fontSize=\"sm\"\n                            columnOne={data[companyName]}\n                            columnTwo={data[date]}\n                        />\n                        <SubSectionRow\n                            type=\"italic\"\n                            fontSize=\"sm\"\n                            columnOne={data[jobTitle]}\n                            columnTwo={data[location]}\n                        />\n                        <SubSectionList data={data[editor]} />\n                    </SubSection>\n                );\n            })}\n        </View>\n    );\n};\n\nexport default WorkExperience;\n","import { Page, StyleSheet } from '@react-pdf/renderer';\nimport React from 'react';\nimport PersonalInfo from './PersonalInfo';\nimport WorkExperience from './WorkExperience';\n//import EducationHistory from './EducationHistory';\n\nconst styles = StyleSheet.create({\n    page: {\n        backgroundColor: '#FFFFFF',\n        justifyContent: 'flex-start',\n        padding: 36,\n        width: '100%',\n    },\n});\n\nconst CV = ({ userData }) => {\n    const FIRST_ROW_GAP = 8;\n    const ROW_GAP = 14;\n\n    return (\n        <Page style={styles.page}>\n            <PersonalInfo userInfo={userData.personal[0]} />\n            <WorkExperience userInfo={userData.work} firstRowGap={FIRST_ROW_GAP} rowGap={ROW_GAP} />\n        </Page>\n    );\n};\n\nexport default CV;\n","export default __webpack_public_path__ + \"static/media/DejaVu-Sans.Book.3765b612.ttf\";","export default __webpack_public_path__ + \"static/media/eb-garamond-v15-latin-700.a6cfee19.ttf\";","export default __webpack_public_path__ + \"static/media/eb-garamond-v15-latin-700italic.dfee03d9.ttf\";","export default __webpack_public_path__ + \"static/media/eb-garamond-v15-latin-italic.55614b12.ttf\";","export default __webpack_public_path__ + \"static/media/eb-garamond-v15-latin-regular.64dc02bf.ttf\";","import { Document, Font } from '@react-pdf/renderer';\nimport React from 'react';\nimport CV from '../components/CV';\nimport unicodeChar from '../components/fonts/DejaVu-Sans.Book.ttf';\nimport garamondBold from '../components/fonts/eb-garamond-v15-latin-700.ttf';\nimport garamondBoldItalic from '../components/fonts/eb-garamond-v15-latin-700italic.ttf';\nimport garamondItalic from '../components/fonts/eb-garamond-v15-latin-italic.ttf';\nimport garamond from '../components/fonts/eb-garamond-v15-latin-regular.ttf';\n\n/**\n *  NOTE: All Garamond fonts were downloaded from here:\n *  https://google-webfonts-helper.herokuapp.com/fonts/eb-garamond?subsets=latin\n *\n *  For some reason, downloading the ttfs from Google Fonts didn't work, nor did using\n *  a Google Fonts url work either.\n */\nFont.register({\n    family: 'Garamond',\n    fonts: [\n        {\n            src: garamond,\n        },\n        {\n            src: garamondBold,\n            fontWeight: 'bold',\n        },\n        {\n            src: garamondItalic,\n            fontStyle: 'italic',\n        },\n        {\n            src: garamondBoldItalic,\n            fontWeight: 'bold',\n            fontStyle: 'italic',\n        },\n    ],\n});\n\n// Just for these characters \"❖\" abd  \"▪\"\nFont.register({\n    family: 'DejaVu Sans',\n    format: 'truetype',\n    src: unicodeChar,\n});\n\nconst PDF = ({ data }) => {\n    const { firstName, lastName } = data.personal[0];\n    const userName = `${firstName} ${lastName}`;\n\n    return (\n        {\n            /* \n            Basically just following this:\n            https://commonlook.com/the-relevance-of-metadata-in-accessible-pdfs/\n        */\n        },\n        (\n            <Document\n                author={`${userName}`}\n                subject={`Curriculum Vitae for ${userName}`}\n                title={`Curriculum Vitae for ${userName}`}\n            >\n                <CV userData={data} />\n            </Document>\n        )\n    );\n};\n\nexport default PDF;\n","import { PDFViewer } from '@react-pdf/renderer';\nimport React, { Component } from 'react';\nimport Form from '../features/form/screens/Form';\nimport Header from '../features/navbar/screens/Header';\nimport PDF from '../features/pdf/screens/PDF';\nimport { objectHasProperty, repeat } from '../utils/utility';\n\nclass App extends Component {\n    constructor() {\n        super();\n\n        this.template = {\n            isSubmitted: false,\n            isReset: false,\n            personal: [\n                {\n                    firstName: '',\n                    lastName: '',\n                    email: '',\n                    phoneNumber: '',\n                    residence: '',\n                },\n            ],\n            education: [\n                {\n                    schoolName: '',\n                    fieldOfStudy: '',\n                    location: '',\n                    date: '',\n                    editor:\n                        '<ul><li><strong>Current GPA</strong>: 4.0</li><li><strong>Projects</strong>: Facebook clone, Battleship</li></ul>',\n                },\n            ],\n            work: [\n                {\n                    companyName: '',\n                    jobTitle: '',\n                    location: '',\n                    date: '',\n                    editor:\n                        '<ul><li>Coordinated movement of air wings at the Battle of Midway.</li></ul>',\n                },\n            ],\n        };\n\n        let [personal, education, work] = repeat(null);\n\n        const checkStorage = (storageItem) => {\n            const item = localStorage.getItem(storageItem);\n\n            if (item) {\n                return JSON.parse(item);\n            }\n\n            return this.template[storageItem];\n        };\n\n        personal = checkStorage('personal');\n        education = checkStorage('education');\n        work = checkStorage('work');\n\n        const { isSubmitted, isReset } = this.template;\n\n        this.state = {\n            isSubmitted: isSubmitted,\n            isReset: isReset,\n            personal: [...personal],\n            education: [...education],\n            work: [...work],\n        };\n\n        this.submitForm = this.submitForm.bind(this);\n        this.resetForm = this.resetForm.bind(this);\n        this.updateResetFlag = this.updateResetFlag.bind(this);\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.addNewInput = this.addNewInput.bind(this);\n        this.removeNewInput = this.removeNewInput.bind(this);\n    }\n\n    addNewInput(sectionName, index) {\n        switch (sectionName) {\n            case 'education': {\n                const schoolName = `schoolName${index}`;\n                const fieldOfStudy = `fieldOfStudy${index}`;\n                const location = `location${index}`;\n                const date = `date${index}`;\n                const editor = `editor${index}`;\n\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        education: [\n                            ...prevState.education,\n                            {\n                                [schoolName]: '',\n                                [fieldOfStudy]: '',\n                                [location]: '',\n                                [date]: '',\n                                [editor]:\n                                    '<ul><li><strong>Current GPA</strong>: 4.0</li><li><strong>Projects</strong>: Facebook clone, Battleship</li></ul>',\n                            },\n                        ],\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.education));\n                    }\n                );\n                break;\n            }\n            case 'work': {\n                const companyName = `companyName${index}`;\n                const jobTitle = `jobTitle${index}`;\n                const location = `location${index}`;\n                const date = `date${index}`;\n                const editor = `editor${index}`;\n\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        work: [\n                            ...prevState.work,\n                            {\n                                [companyName]: '',\n                                [jobTitle]: '',\n                                [location]: '',\n                                [date]: '',\n                                [editor]:\n                                    '<ul><li>Coordinated movement of air wings at the Battle of Midway.</li></ul>',\n                            },\n                        ],\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.work));\n                    }\n                );\n                break;\n            }\n            default:\n                throw new Error(\n                    `Unexpected section name '${sectionName}' was passed.` +\n                        \"Only valid names are 'work' and 'education'.\"\n                );\n        }\n    }\n\n    removeNewInput(sectionName, index) {\n        // original => The object to copy the values to\n        // valueObject => The object passing the values\n        // Note: Both objects have to be the same length.\n        const copyValues = (original, valueObject) => {\n            const objectToCopyValueTo = Object.entries(original);\n            const objectToCopyFrom = Object.values(valueObject);\n\n            objectToCopyValueTo.forEach((element, index) => {\n                const value = 1;\n                element[value] = objectToCopyFrom[index];\n            });\n\n            const copiedObject = objectToCopyValueTo.reduce((accum, [k, v]) => {\n                accum[k] = v;\n                return accum;\n            }, {});\n\n            return copiedObject;\n        };\n\n        switch (sectionName) {\n            case 'education':\n                const newEducation = [...this.state.education];\n\n                for (let i = index; i < newEducation.length; ++i) {\n                    const start = i + 1;\n\n                    if (start >= newEducation.length) {\n                        break;\n                    }\n\n                    const copiedObject = copyValues(newEducation[i], newEducation[start]);\n                    newEducation[i] = copiedObject;\n                }\n\n                /*  It's a pop operation since the order stays the same and\n                 *   we only need to remove the newest input.\n                 *\n                 *   This is due to the fact that the map() on the line 133 in FormFieldset.jsx\n                 *   passes an index to access App state.\n                 */\n                newEducation.pop();\n\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        education: newEducation,\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.education));\n                    }\n                );\n                break;\n\n            case 'work':\n                const newWork = [...this.state.work];\n\n                for (let i = index; i < newWork.length; ++i) {\n                    const start = i + 1;\n\n                    if (start >= newWork.length) {\n                        break;\n                    }\n\n                    const copiedObject = copyValues(newWork[i], newWork[start]);\n                    newWork[i] = copiedObject;\n                }\n\n                newWork.pop();\n\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        work: newWork,\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.work));\n                    }\n                );\n                break;\n\n            default:\n                throw new Error(\n                    `Unexpected section name '${sectionName}' was passed.` +\n                        \"Only valid names are 'work' and 'education'.\"\n                );\n        }\n    }\n\n    // Callback used in 'handleChange()' in NewInputs.jsx + CustomEditor.jsx\n    handleFieldChange(sectionName, name, value) {\n        switch (sectionName) {\n            case 'personal':\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        personal: [\n                            {\n                                ...prevState.personal[0],\n                                [name]: value,\n                            },\n                        ],\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.personal));\n                    }\n                );\n                break;\n\n            case 'education':\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        education: prevState.education.map((state) => {\n                            const matchingName = objectHasProperty(state, name);\n                            return matchingName ? { ...state, [name]: value } : state;\n                        }),\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.education));\n                    }\n                );\n                break;\n\n            case 'work':\n                this.setState(\n                    (prevState) => ({\n                        ...prevState,\n                        work: prevState.work.map((state) => {\n                            const matchingName = objectHasProperty(state, name);\n                            return matchingName ? { ...state, [name]: value } : state;\n                        }),\n                    }),\n                    () => {\n                        localStorage.setItem(sectionName, JSON.stringify(this.state.work));\n                    }\n                );\n                break;\n\n            default:\n                throw new Error(\n                    `Unexpected section name '${sectionName}' was passed.` +\n                        \"Only valid names are 'personal', 'work' and 'education'.\"\n                );\n        }\n    }\n\n    resetForm(event) {\n        event.preventDefault();\n\n        if (window.confirm('Are you sure you want to reset the form?')) {\n            localStorage.clear();\n\n            const { isSubmitted, personal, education, work } = this.template;\n\n            this.setState({\n                isSubmitted: isSubmitted,\n                isReset: true,\n                personal: [...personal],\n                education: [...education],\n                work: [...work],\n            });\n        }\n    }\n\n    updateResetFlag() {\n        this.setState({\n            isReset: false,\n        });\n    }\n\n    submitForm() {\n        this.setState({\n            isSubmitted: !this.state.isSubmitted,\n        });\n    }\n\n    render() {\n        const { isSubmitted, personal } = this.state;\n        const userName = `${personal[0].firstName}${personal[0].lastName}CV`;\n\n        let UserPDF = null;\n        if (this.state.isSubmitted) {\n            UserPDF = <PDF data={this.state} />;\n        }\n\n        return (\n            <>\n                <Header />\n                <main>\n                    {!isSubmitted && (\n                        <Form\n                            onSubmit={this.submitForm}\n                            onChange={this.handleFieldChange}\n                            addNewInput={this.addNewInput}\n                            removeNewInput={this.removeNewInput}\n                            resetForm={this.resetForm}\n                            isReset={this.state.isReset}\n                            updateResetFlag={this.updateResetFlag}\n                            storedInputs={this.state}\n                        />\n                    )}\n                    {isSubmitted && (\n                        <>\n                            <PDFViewer width={'80%'} height={'100%'}>\n                                {UserPDF}\n                            </PDFViewer>\n\n                            <button onClick={this.submitForm}>{'< Go back'}</button>\n                        </>\n                    )}\n                </main>\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './root/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}